# Funktion virtual_id_table{{{
#
virtual_id_table() {
	FILE="$1"
	autoload -U general_first_address no_adr_and_recipient_adr_msg

	# Funktion virtual_id_menue{{{
	virtual_id_menue() {
		VIRTUAL_ID_MENU=($lv_Address \"$ADR\" $lv_Id \"$ID\"
		$gv_Save \"\" $gv_Back \"\")
		menubox "$1" "$TABLE_TITLE" "$gv_Menupoint" "$VIRTUAL_ID_MENU"
	}
	#}}}
	# Funktion virtual_id_aendern{{{
	virtual_id_aendern() {
	virtual_id_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help "$TAB_HELP"
				virtual_id_menue "${gv_Auswahl#HELP }"
				;;
			$lv_Address)
				# Empfaenger Adresse eingeben
				general_first_address
				virtual_id_menue $lv_Address
				;;
			$lv_Id)
				# Gruppen/User-ID waehlen{{{
				# Je nachdem welche virtual_*_table konfiguriert
				# werden soll; einmal fuer User und einmal fuer
				# Gruppen.
				case "$TAB" in
					*uid*)
						user_id
						if [ "$WERT" ] ; then
							ID="$WERT"
						else
							unset -- ID
							no_input_msg
						fi
						;;
					*gid*)
						group_id
						if [ "$WERT" ] ; then
							ID="$WERT"
						else
							unset -- ID
							no_input_msg
						fi
						;;
				esac
				#}}}
				virtual_id_menue $lv_Id
				;;
			$gv_Save)
				# Eintraege speichern{{{
				if [ "$ADR" -a "$ID" ] ; then
					if [ "$AENDERN_ADR" ] ; then
						sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1}#${ADR}\t${ID}#" $FILE >$FILE$$
						mv $FILE$$ $FILE
					else
						grep -v "^${ADR}[[:space:]]" $FILE >$FILE$$
						>> $FILE$$ <<< "$ADR	$ID"
						mv $FILE$$ $FILE
					fi
					break
				else
					no_adr_and_recipient_adr_msg
					virtual_id_menue
				fi
				#}}}
				;;
			$gv_Back)	break
				;;
		esac
	done
	}
	#}}}
	tabellen_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help tab_help
				tabellen_menue "${gv_Auswahl#HELP }"
				;;
			$gv_Display)
				# Ansicht der Eintraege
				tab_ansicht
				tabellen_menue $gv_Display
				;;
			$gv_Create)
				# Werte anlegen
				unset -- ADR E_ADR AENDERN_ADR AENDERN_ADR1
				virtual_id_aendern
				tabellen_menue $gv_Create
				;;
			$gv_Edit)
				# Eintraege bearbeiten# {{{
				edit_file "$TABLE_TITLE" "$FILE"
				## }}}
				tabellen_menue $gv_Edit
				;;
			$gv_Change)
				# Eintraege veraendern{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL[1]} ]] ; then
					CHANGE_MENU=($AUSWAHL)
					menubox "$C_CHOICE" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help tabs_help
								menubox "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
								;;
							*)
								# Auswahl veraendern
								C_CHOICE="$gv_Auswahl"
								ADR="${${=gv_Auswahl}[1]}"
								ID="${${=gv_Auswahl}[2]}"
								AENDERN_ADR="$ADR"
								AENDERN_ADR1="$ID"
								#
								virtual_id_aendern
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Change
				;;
			$gv_Delete)
				# Eintraege loeschen{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL_MULTI[1]} ]] ; then
					DEL_MENU=($AUSWAHL_MULTI)
					checklist "" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help kwpostfix_del_help
								checklist "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
								;;	
							*)	# loeschen
								while read ADRESS REST ; do
									grep -v "^${ADRESS}[[:space:]]${REST}" $FILE >$FILE$$
									mv $FILE$$ $FILE
								done < $gv_LogFile$$
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Delete
				;;
			$lv_Db)
				# Datenbank neu erzeugen und Postfix anweisen
				# die Einstellungen neu einzulesen
				db_new_reread "$TAB_FM" "$FILE"
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
