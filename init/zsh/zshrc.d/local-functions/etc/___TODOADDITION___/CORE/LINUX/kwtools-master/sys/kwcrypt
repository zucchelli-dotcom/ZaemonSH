#!/bin/zsh
#
# Autor: Kai Wilke  <kiste@netzworkk.de> 08.06.2015
#
# Script: kwcrypt, ist ein Wrapper fuer kwcryptsetup, kwecryptfs und kwlosetup.
#
# Version: 0.1.0

# Ausführen von Befehlen auf bestimmte Signale.
# Notiz. Immer den Namen verwenden, da es auf einigen OS
# eine andere Numerierung geben kann.
#
trap 'setterm --inversescreen off ; setterm --reset ;
rm -rf $gv_WorkDir &>/dev/null' EXIT INT

gv_ScriptName=${0##*/}

#
# Verzeichniss in denen nach Funktionen gesucht wird
#
if [ -f /usr/local/share/kwtools/functions/sys/script_init ] ; then
	PREFIX=/usr/local
else
	PREFIX=/usr
fi
Script_init_Fpath="${PREFIX}/share/kwtools/functions/sys"
export TEXTDOMAINDIR="${PREFIX}/share/locale"
export TEXTDOMAIN="$gv_ScriptName"

if [ -z ${(M)${FPATH}##*${Script_init_Fpath}*} ] ; then
	FPATH=${Script_init_Fpath}:${FPATH}
fi

#
# script_init enthält die globalen Scripteinstellungen und lädt
# diese automatisch.
#
autoload -U script_init

# Scriptinitialisierung
script_init

# Nachdem das Script initialiiert wurde, kann man die anderen
# benötigten Funktionen laden.
autoload -U no_crypt_sw_msg

# Suche nach kwtools Crypto Software# {{{
unset -- CRYPTO_SW
# pruefen auf die kwtools Backends.
for p in kwcryptsetup kwecryptfs kwlosetup ; {
	prog_check $p
	if [ ! -z "$PROGS" ] ; then
		CRYPTO_SW+=($p \"\")
	fi
}
## }}}
# Wenn es keine Crypto Software gibt mit Nachricht abbrechen.# {{{
if [ -z "$CRYPTO_SW" ] ; then
	no_crypt_sw_msg
	exit 0
fi
## }}}
# Funktion main_menu# {{{
#
main_menu() {
	MAIN_MENU=($CRYPTO_SW $gv_Exit \"\")
	menubox "$1" "$gv_Mainmenu" "$gv_Menupoint" "$MAIN_MENU"
}
## }}}
##################################################################
#
# Hauptprogramm
#
##################################################################
#
main_menu
while [ "$gv_Auswahl" ] ; do
	case $gv_Auswahl in
		HELP*)
			script_help help
			main_menu "${gv_Auswahl#HELP }"
			;;
		$gv_Exit)	break
			;;
		*)
			# Crypto Programm ausfuehren
			C_PROG="$gv_Auswahl"
			$gv_Auswahl
			main_menu "$C_PROG"
			;;
	esac
done	
#
exit 0
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
