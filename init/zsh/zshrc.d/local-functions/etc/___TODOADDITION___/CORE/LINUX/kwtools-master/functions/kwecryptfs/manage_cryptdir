# Funktion (manage_cryptdir), verschluesselte Verzeichnisse managen
#
# usage: manage_cryptdir
#
manage_cryptdir() {
	# Funktion manage_menu# {{{
	#
	MANAGE_TITLE="$gv_Directory"
	MANAGE_MENU=($gv_Create \"\" $gv_Change \"\" $gv_Delete \"\" $gv_Back \"\")
	manage_menu() {
		menubox "$1" "$MANAGE_TITLE" "$gv_Menupoint" "$MANAGE_MENU"
	}
	## }}}
	manage_menu
	while [ -n "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help manage_dir_help
				manage_menu "${gv_Auswahl#HELP }"
				;;
			$gv_Create)
	            # verschluesselte Verzeichnisse erstellen# {{{
	            unset -- CIPHER KEY_FILE KEY_SIZE KEY_TYPE M_O_VALUE \
	                MOUNT_PATH M_POINT NOAUTO O_DIR PASSTHROUGH NO_SIG_CACHE VERSION XATTR
	            read_file kwecryptfsrc
	            kwecryptfs_conf
	            if [ "$?" = 0 ] ; then
	                # erstmal Verzeichnis umounten
	                mount_check -a "$O_DIR"
	                # fstab schreiben
	                write_fstab
	                # Verzeichnis mounten
					mount_check -m "$O_DIR" &>/dev/null
	            fi
				## }}}
				manage_menu $gv_Create
				;;
			$gv_Change)
	            # verschluesselte Verzeichnisse aendern# {{{
	            unset -- CIPHER KEY_FILE KEY_SIZE KEY_TYPE M_O_VALUE \
	                MOUNT_PATH M_POINT NOAUTO O_DIR PASSTHROUGH \
					NO_SIG_CACHE VERSION XATTR
	            read_fstab ecryptfs
	            if [ -n "${FSTAB_VALUES_E[1]}" ] ; then
	                menubox "$NR" "$gv_Change" "$gv_Menupoint" "$FSTAB_VALUES_E"
	                while [ -n "$gv_Auswahl" ] ; do
	                    case "$gv_Auswahl" in
	                        HELP*)
	                            script_help share/conf_change_help
	                            menubox "${gv_Auswahl#HELP }" "$gv_Change" "$gv_Menupoint" "$FSTAB_VALUES_E"
	                            ;;
	                        *)
	                            # uebernehmen
								NR="$gv_Auswahl"
	                            read_fstab_value
	                            parse_opts
	                            kwecryptfs_conf
	            				if [ "$?" = 0 ] ; then
	                				# erstmal Verzeichnis umounten
	                            	mount_check -a "$FS_DRIVE"
	                				# fstab schreiben
	                            	write_fstab
	                				# Verzeichnis mounten
	                            	mount_check -m "$O_DIR" &>/dev/null
	            				fi
	                            break
	                            ;;
	                    esac
	                done
	            else
	                no_tabentry_msg
	            fi
				## }}}
				manage_menu $gv_Change
				;;
			$gv_Delete)
	            # verschluesselte Verzeichnisse loeschen# {{{
	            read_fstab ecryptfs
	            if [ -n "${FSTAB_VALUES_M[1]}" ] ; then
					checklist "" "$gv_Delete" "$gv_Delete_MSG" "$FSTAB_VALUES_M"
	                while [ -n "$gv_Auswahl" ] ; do
	                    case "$gv_Auswahl" in
	                        HELP*)
	                            script_help share/conf_del_help
	                            checklist "${gv_Auswahl#HELP }" "$gv_Delete" "$gv_Delete_MSG" "$FSTAB_VALUES_M"
	                            ;;
	                        *)
	                            # uebernehmen
								for i in ${=gv_Auswahl} ; {
	                				# erstmal Verzeichnis umounten
	                            	mount_check -a "${${FSTAB_VALUES[i]}%% *}"
	                				# fstab schreiben
									print -l ${(R)${(f)"$(< $TABFILE)"}##(${${FSTAB_VALUES[i]}%% *}[[:space:]]*)*} > ${gv_WorkDir}/fstab
									mv ${gv_WorkDir}/fstab $TABFILE
								}
	                            break
	                            ;;
	                    esac
	                done
	            else
	                no_tabentry_msg
	            fi
				## }}}
				manage_menu $gv_Delete
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
