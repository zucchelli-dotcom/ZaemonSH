# Funktion um die Konfiguration zu schreiben.{{{
#
# usage: kwrsync_backup_config
#
kwrsync_backup_config() {
#
if [ ! -d "${KWRSYNC_CF%/*}" ] ; then
	create_file -d ${KWRSYNC_CF%/*}
fi	
#
# $KWRSYNC_CF schreiben.
#
> $KWRSYNC_CF <<< "# Beginn $KWRSYNC_CF
#
# Autor: Kai Wilke <kiste@netzworkk.de>

###########################################
# globale Optionen
###########################################

# Unter welchem Pfad wird gesichert?
BACKUP_PATH=\"$BACKUP_PATH\"

# Weitere Optionen fuer rsync. Ggf. macht eine Limitierung 
# der Bandbreite Sinn, Angabe in kbyte/sec:
# BW_LIMIT="--bwlimit=256"
BW_LIMIT=\"$BW_LIMIT\"
#
# Soll geprueft werden, ob noch ein gewisser Prozentsatz 
# an Plattenplatz und Inodes frei ist?
# CHECK_HDMINFREE=yes/no
# HDMINFREE= Integerzahl zwischen 0 und <100 (Prozent)
# Ist die benutzte Kilobyte oder Inode Prozentzahl kleiner
# als die angegebene maximale Prozentzahl an Plattenplatz
# ($HDMINFREE), wird ein Backup durchgefuehrt.
HDMINFREE=\"$HDMINFREE\"
CHECK_HDMINFREE=\"$CHECK_HDMINFREE\"

# Partition die gemountet werden soll - auf der die
# Snapshots gesichert werden.
MOUNT_PATH=\"$MOUNT_PATH\"

# Rechner/Server die gesichert werden sollen, getrennt durch ein Leerzeichen.
SERVER=\"$SERVER\"

# Logdatei mit vollem Pfad.
LOGFILE=\"$LOGFILE\"

# voller Pfad, Preexec Script + optionale Argumente.
# Dieses Sript wird sofort ausgefuehrt bevor das/die Backup(s)
# erstellt werden.
PREEXEC=\"$PREEXEC\"

# voller Pfad, Preexec Script + optionale Argumente.
# Dieses Sript wird sofort ausgefuehrt nachdem das/die
# Backup(s) erstellt wurden.
POSTEXEC=\"$POSTEXEC\"

# Fuer welchen User soll der Crontab Eintrag (kwrsync_backup_cron)
# erstellt werden. Wenn der User nicht root ist benoetigt er einen
# Eintrag in /etc/sudoers, damit er das Script ausfuehren darf.
USER_RUN=\"$USER_RUN\"

# Remote Shell für die Übertragung nutzen (rsh,ssh).
# ssh ist eine Secure Shell, rsh hat keine Verschluesselung.
RSYNC_RSH=\"$RSYNC_RSH\"

# Bei yes wird das rekursive Sichern ueber Dateisystemgrenzen hinweg
# ausgeschaltet (yes/no).
ONE_FS=\"$ONE_FS\"

# Sollen Hardlinks bei identischen Dateien erstellt werden.
# Dies ist der beste Weg um spezielle Dateien, wie FIFO's, zu
# unterstuetzen und natuerlich um Platz zu sparen.
# Schalten Sie dies ein (yes), wenn Ihr rsync (>=2.6.4)
# dies unterstuetzt.
LINK_DST=\"$LINK_DST\"

# Anzahl der Rotierung der einzelnen Snapshots.
ROTATE_COUNT_HOURLY=\"$ROTATE_COUNT_HOURLY\"

ROTATE_COUNT_DAILY=\"$ROTATE_COUNT_DAILY\"

ROTATE_COUNT_WEEKLY=\"$ROTATE_COUNT_WEEKLY\"

ROTATE_COUNT_MOUNTHLY=\"$ROTATE_COUNT_MOUNTHLY\"

###########################################
# LVM Snapshot
###########################################

# LVM Komandos zum erzeugen und loeschen des
# LVM Snapshots
LVCREATE_CMD=\"$LVCREATE_CMD\"
LVREMOVE_CMD=\"$LVREMOVE_CMD\"

# Groesse des LVM Snapshots der angelegt werden soll.
LV_SIZE=\"$LV_SIZE\"

# Name des LVM Snapshots (snapshot)
SNAPSHOT_NAME=\"$SNAPSHOT_NAME\"

# Pfad unter der die Volume Groups liegen (/dev).
VG_PATH=\"$VG_PATH\"

# Mountpunkt unter dem das/die LVM Snapshot(s) temporaer
# eingehaengt werden soll(en).
LVM_MOUNTPOINT=\"$LVM_MOUNTPOINT\"

# End $KWRSYNC_CF"
#
read_file -f $KWRSYNC_CF
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
