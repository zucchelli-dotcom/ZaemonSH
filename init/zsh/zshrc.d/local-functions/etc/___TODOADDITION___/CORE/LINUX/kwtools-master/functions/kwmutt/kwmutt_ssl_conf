# Funktion (kwmutt_ssl_conf), konfiguriert die ssl/tls Einstellungen fuer mutt# {{{
#
# usage: kwmutt_ssl_conf
#
kwmutt_ssl_conf() {
	Unset=(ssl_starttls ssl_force_tls ssl_min_dh_prime_bits ssl_use_tlsv1 ssl_use_sslv3
		certificate_file ssl_ca_certificates_file)
	unset -- $Unset
	# Funktion (ssl_conf_menu), menu fuer die SSL/TLS Konfiguration# {{{
	SSL_TITLE="$lv_Ssl"
	ssl_conf_menu() {
		SSL_CONF_MENU=(ssl_starttls \"$ssl_starttls\"
		ssl_force_tls \"$ssl_force_tls\"
		ssl_min_dh_prime_bits \"$ssl_min_dh_prime_bits\"
		ssl_use_tlsv1 \"$ssl_use_tlsv1\"
		ssl_use_sslv3 \"$ssl_use_sslv3\"
		certificate_file \"$certificate_file\"
		ssl_ca_certificates_file \"$ssl_ca_certificates_file\"
		$gv_Save \"\"
		$gv_Back \"\")
		menubox "$1" "$SSL_TITLE" "$gv_Menupoint" "$SSL_CONF_MENU"
	}
	## }}}
	# Bestehende Konfiguration einlesen.# {{{
	if [ -f "$M_SSL" ] ; then
		create_tmp_conf "$M_SSL"
		read_file -f $gv_LogFile
	fi
	## }}}
	# leere Variable mit Standardwerten fuellen.# {{{
	ssl_starttls="${ssl_starttls:-yes}"
	ssl_force_tls="${ssl_force_tls:-no}"
	ssl_min_dh_prime_bits="${ssl_min_dh_prime_bits:-0}"
	ssl_use_tlsv1="${ssl_use_tlsv1:-yes}"
	ssl_use_sslv3="${ssl_use_sslv3:-yes}"
	certificate_file="${certificate_file:-~/.mutt_certificates}"
	ssl_ca_certificates_file="$ssl_ca_certificates_file"
	## }}}
	ssl_conf_menu
	while [ -n "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help kwmutt_ssl_help
				ssl_conf_menu "${gv_Auswahl#HELP }"
				;;
			ssl_starttls)
				# SSL/TLS aktivieren# {{{
				MSG=$(gettext 'Soll die Verschluesselung aktiviert werden?')
				yesno_select "$SSL_TITLE" "$MSG" "$ssl_starttls"
				if [ -n "$VALUE" ] ; then
					ssl_starttls="$VALUE"
				else
					ssl_starttls=yes
				fi
				#}}}
				ssl_conf_menu ssl_starttls
				;;
			ssl_force_tls)
				# SSL/TLS unbedingt aktivieren# {{{
				MSG=$(gettext 'Soll die Verschluesselung auf jeden Fall aktiviert werden (ja/nein)?')
				yesno "$SSL_TITLE" "$MSG" "$ssl_force_tls"
				if [ "$gv_Auswahl" = yes ] ; then
					ssl_force_tls=yes
				else
					ssl_force_tls=no
				fi
				#}}}
				ssl_conf_menu ssl_force_tls
				;;
			ssl_min_dh_prime_bits)
				# Zahl in Bits zur Autorisierung auf Mailservern.# {{{
				MSG=$(gettext 'Geben Sie eine Zahl in Bits an zur Autorisierung auf Mailservern. "0" benutzt standardmaessig die GNUTLS Bibliothek.')
				number_input -i "$ssl_min_dh_prime_bits"
				if [ -n "$NUMBER" ] ; then
					ssl_min_dh_prime_bits="$NUMBER"
				else
					ssl_min_dh_prime_bits="$NUMBER"
				fi
				#}}}
				ssl_conf_menu ssl_min_dh_prime_bits
				;;
			ssl_use_tlsv1)
				# Soll TLS Version 1 benutzt werden# {{{
				MSG=$(gettext 'Soll die TLS Version 1 fuer die verschluesselte Verbundung zum Mail Server benutzt werden (ja/nein)?')
				yesno "$SSL_TITLE" "$MSG" "$ssl_use_tlsv1"
				if [ "$gv_Auswahl" = yes ] ; then
					ssl_use_tlsv1=yes
				else
					ssl_use_tlsv1=no
				fi
				#}}}
				ssl_conf_menu ssl_use_tlsv1
				;;
			ssl_use_sslv3)
				# Soll SSL Version 3 benutzt werden# {{{
				MSG=$(gettext 'Soll die SSL Version 3 fuer die verschluesselte Verbundung zum Mail Server benutzt werden (ja/nein)?')
				yesno "$SSL_TITLE" "$MSG" "$ssl_use_sslv3"
				if [ "$gv_Auswahl" = yes ] ; then
					ssl_use_sslv3=yes
				else
					ssl_use_sslv3=no
				fi
				#}}}
				ssl_conf_menu ssl_use_sslv3
				;;
			certificate_file)
				# Speicherort der Zertifikat Datei# {{{
				CERT_FILE_MSG=$(gettext 'Geben Sie den Pfad und den Namen der Datei ein in der das erhaltene Zertifikat gespeichert werden soll.')
				inputbox "$SSL_TITLE" "$CERT_FILE_MSG" "$certificate_file"
				if [ -n "$gv_Auswahl" ] ; then
					certificate_file="$gv_Auswahl"
				else
					certificate_file="~/.mutt_certificates"
				fi
				## }}}
				ssl_conf_menu certificate_file
				;;
			ssl_ca_certificates_file)
				# CA Zertifikat, zur automatischen Autorisierung beim Server.# {{{
				fselect "$ssl_ca_certificates_file"
				if [ -n "$gv_Auswahl" ] ; then
					fselect_check "$gv_Auswahl"
					if [ -n "$FILE" ] ; then
						ssl_ca_certificates_file="$FILE"
					else
						no_input_msg
						ssl_ca_certificates_file=""
					fi
				else
					no_input_msg
					ssl_ca_certificates_file=""
				fi
				## }}}
				ssl_conf_menu ssl_ca_certificates_file
				;;
			$gv_Save)
				# Einstellungen speichern
				kwmutt_ssl_config
				unset -- $Unset
				break
				;;
			$gv_Back)
				# ohne speichern abbrechen
				unset -- $Unset
				break
				;;
		esac
	done
}
## }}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
