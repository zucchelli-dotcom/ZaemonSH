# Funktion transport_table{{{
#
transport_table() {
	FILE="$1"
	autoload -U no_adr_msg regexp_pcre_access
	regexp_pcre_access

	# Funktion transport_menue{{{
	transport_menue() {
		TRANS="${TRANS:-$OldTrans}"
		if [[ $TRANS == error ]] ; then
			TEXT="${TEXT:-$OldText}"
			TRANSPORT_MENU=($lv_Address \"$ADR\" $lv_Transport \"$TRANS\"
			$lv_Text \"$TEXT\" $gv_Save \"\" $gv_Back \"\")
		else
			HOST="${HOST:-$OldHost}"
			PORT="${PORT:-$OldPort}"
			TRANSPORT_MENU=($lv_Address \"$ADR\" $lv_Transport \"$TRANS\"
			$gv_Host \"$HOST\" $lv_Port \"$PORT\" $gv_Save \"\" $gv_Back \"\")
		fi
		menubox "$1" "$TABLE_TITLE" "$gv_Menupoint" "$TRANSPORT_MENU"
	}
	#}}}
	# Funktion transport_aendern{{{
	transport_aendern() {
		transport_menue
		while [ "$gv_Auswahl" ] ; do
			case "$gv_Auswahl" in
				HELP*)	script_help "$TAB_HELP"
					transport_menue "${gv_Auswahl#HELP }"
					;;
				$lv_Address)
					# Adresse waehlen{{{
					ADRESS_MSG=$(gettext 'Geben Sie entweder eine Mailadresse, Domain, oder Subdomain ein fuer die Postfix Mail annehmen soll (Bsp. domain.de | .subdomain.de).')
					inputbox "$TABLE_TITLE" "$ADRESS_MSG" "$ADR"
					if [ "$gv_Auswahl" ] ; then
						case "$gv_Auswahl" in
							[a-zA-Z0-9]*@*.*)	ADR="$gv_Auswahl"
								;;
							[.a-zA-Z0-9]*.*)	ADR="$gv_Auswahl"
								;;
							\*)	ADR="$gv_Auswahl"
								;;
							*)	unset -- ADR
								no_input_msg
								;;
						esac
					else
						unset -- ADR
						no_input_msg
					fi
					#}}}
					transport_menue $lv_Address
					;;
				$lv_Transport)
					# Transport Methode waehlen{{{
					transport_methode "${TRANS##:*}" "${TRANS##*:}"
					if [ "$WERT" = error ] ; then
						TRANS="$WERT"
						OldTrans="$TRANS"
						unset -- HOST PORT
					elif [ -n "$WERT" ] ; then
						TRANS="$WERT"
						OldTrans="$TRANS"
						unset -- TEXT
					else
						unset -- TRANS
						no_input_msg
					fi
					#}}}
					transport_menue $lv_Transport
					;;
				$gv_Host)
					# Zielrechner fuer Transport eingeben# {{{
					regexp_pcre_access_host
					if [ -n "$HOST" ] ; then
						unset -- TEXT
					fi
					## }}}
					transport_menue $gv_Host
					;;
				$lv_Port)
					# Port eingeben# {{{
					regexp_pcre_access_port
					if [[ -n $PORT ]] ; then
						unset -- TEXT
					fi
					## }}}
					transport_menue $lv_Port
					;;
				$lv_Text)
					# Text eingeben{{{
					regexp_pcre_access_text
					if [[ -n $WERT ]] ; then
						TEXT="$WERT"
						OldText="$TEXT"
						unset -- HOST PORT
					else
						unset -- TEXT
						no_input_msg
					fi
					#}}}
					transport_menue $lv_Text
					;;
				$gv_Save)
					# Eintraege speichern{{{
					if [ -n "$ADR" ] ; then
						if [ "$AENDERN_ADR" ] ; then
							if [ "$TRANS" != error ] ; then
								if [ "$PORT" ] ; then
									sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}:${HOST}:${PORT}#" $FILE >$FILE$$
								else
									sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}:${HOST}#" $FILE >$FILE$$
								fi
							else
								sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}:${TEXT}#" $FILE >$FILE$$
							fi
							mv $FILE$$ $FILE
						else
							grep -v "^${ADR}[[:space:]]" $FILE >$FILE$$
							if [ "$TRANS" != error ] ; then
								if [ "$PORT" ] ; then
									>> $FILE$$ <<< "$ADR	${TRANS}:${HOST}:${PORT}"
								else
									>> $FILE$$ <<< "$ADR	${TRANS}:${HOST}"
								fi
							else
								>> $FILE$$ <<< "$ADR	${TRANS}:${TEXT}"
							fi
							mv $FILE$$ $FILE
						fi
						break
					else
						no_adr_msg
						transport_menue
					fi
					#}}}
					;;
				$gv_Back)	break
					;;
			esac
		done
	}
	#}}}
	tabellen_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help tab_help
				tabellen_menue "${gv_Auswahl#HELP }"
				;;
			$gv_Display)
				# Ansicht der Eintraege
				tab_ansicht
				tabellen_menue $gv_Display
				;;
			$gv_Create)
				# Werte anlegen
				unset -- ADR HOST PORT TEXT TRANS AENDERN_ADR AENDERN_ADR1 OldHost \
					OldPort OldText
				transport_aendern
				tabellen_menue $gv_Create
				;;
			$gv_Edit)
				# Eintraege bearbeiten# {{{
				edit_file "$TABLE_TITLE" "$FILE"
				## }}}
				tabellen_menue $gv_Edit
				;;
			$gv_Change)
				# Eintraege aendern{{{
				unset -- ADR HOST PORT TEXT TRANS AENDERN_ADR AENDERN_ADR1 OldHost \
					OldPort OldText
				key_value "$FILE"
				if [[ -n ${AUSWAHL[1]} ]] ; then
					CHANGE_MENU=($AUSWAHL)
					menubox "$C_CHOICE" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help tabs_help
								menubox "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
								;;
							*)
								# Auswahl aendern
								C_CHOICE="$gv_Auswahl"
								print "${(s.:.)${gv_Auswahl}}" | \
								while read ADRESSE TRANSP MXHOST REST ; do
									ADR="$ADRESSE"
									TRANS="$TRANSP"
									if [ "$TRANS" != error ] ; then
										HOST="$MXHOST"
										PORT="$REST"
										unset -- TEXT
									else
										TEXT="$MXHOST $REST"
										unset -- HOST PORT
									fi
									AENDERN_ADR="$ADR"
									# Diese Variablen werden veraendert.
									if [ "$TRANS" != error ] ; then
										if [ -n "$HOST" -a -n "$PORT" ] ; then
											AENDERN_ADR1="${TRANS}:${HOST}:${PORT}"
										elif [-n "$HOST" ] ; then
											AENDERN_ADR1="${TRANS}:${HOST}"
										else
											AENDERN_ADR1="${TRANS}:"
										fi
									else
										if [ -n "$TEXT" ] ; then
											AENDERN_ADR1="${TRANS}:${TEXT}"
										else
											AENDERN_ADR1="${TRANS}:"
										fi
									fi
								done
								transport_aendern
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Change
				;;
			$gv_Delete)	
				# Eintraege loeschen{{{
				key_value "$FILE"
				if [[ -n  ${AUSWAHL_MULTI[1]} ]] ; then
					DEL_MENU=($AUSWAHL_MULTI)
					checklist "" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help kwpostfix_del_help
								checklist "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
								;;	
							*)	# Loeschen
								while read ADRESS ; do
									grep -v "^${${${ADRESS// /.*}//\]/\\]}//\[/\\[}" $FILE >$FILE$$
									mv $FILE$$ $FILE
								done < $gv_LogFile$$
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Delete
				;;
			$lv_Db)
				# Datenbank neu erzeugen und Postfix anweisen
				# die Einstellungen neu einzulesen
				db_new_reread "$TAB_FM" "$FILE"
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
