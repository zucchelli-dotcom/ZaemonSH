# Funktion (kwpwsafe_conf)# {{{
#
# usage: kwpwsafe_conf
kwpwsafe_conf() {
	lv_Default_Pwsafe_File=$(gettext 'Standard Datenbank')
	lv_Pass_Length=$(gettext 'Passwortlaenge')
	PASSWD_LENGTH=${PASSWD_LENGTH:-8}
	#
	# Funktion (kwpwsafe_conf_menu)# {{{
	kwpwsafe_conf_menu() {
		KWPWSAFE_CF_MENU=(\"$lv_Default_Pwsafe_File\" \"$DEFAULT_PWSAFE_FILE\"
		$lv_Pass_Length \"$PASSWD_LENGTH\"
		$gv_Save \"\" $gv_Back \"\")
		menubox "$1" "$gv_Configuration" "$gv_Menupoint" "$KWPWSAFE_CF_MENU"
	}
	## }}}
	kwpwsafe_conf_menu
	while [ -n "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help kwpwsafe_conf_help
				kwpwsafe_conf_menu "${gv_Auswahl#HELP }"
				;;
			"$lv_Default_Pwsafe_File")
				# Standard pwsafe DB auswaehlen# {{{
				list_db
				if [ -n "${DB_FILES[1]}" ] ; then
					DB_MENU=($DB_FILES)
					menubox "$DEFAULT_PWSAFE_FILE" "$gv_Configuration" "$DB_MSG" "$DB_MENU"
					while [[ -n $gv_Auswahl ]] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help
								menubox "${gv_Auswahl#HELP }" "$gv_Configuration" "$DB_MSG" "$DB_MENU"
								;;
							*)
								# Auswahl uebernehmen
								DEFAULT_PWSAFE_FILE="$gv_Auswahl"
								break
								;;
						esac
					done
				else
					no_db_msg
				fi
				## }}}
				kwpwsafe_conf_menu $lv_Default_Pwsafe_File
				;;
			$lv_Pass_Length)
				# Passwortlaenge eingeben# {{{
				MSG=$(gettext 'Geben Sie die Laenge des Passworts ein, welches generiert werden soll (z.B. 8).')
				number_input "$OPEN_DB_TITLE" "$MSG" "$PASSWD_LENGTH"
				if [ -n "$NUMBER" ] ; then
					PASSWD_LENGTH="$NUMBER" 
				else
					PASSWD_LENGTH="8"
				fi
				## }}}
				kwpwsafe_conf_menu $lv_Pass_Length
				;;
			$gv_Save)
				# speichern# {{{
				kwpwsafe_config
				## }}}
				break
				;;
			$gv_Back) break
				;;
		esac
	done
}
## }}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
