# Funktion um den axfrdns zu managen{{{
#
# usage: axfrdns_management
#
axfrdns_management() {
if [ -d ${SV_DIR}/${DNS} ] ; then
	cd ${SV_DIR}/${DNS}
	AXFR_MAIN_TITLE=(${lv_Administration}::${lv_Axfrdns})
	#
	# Funktion um die Adressen Angaben fuer axfrdns zu pruefen{{{
	#
	# usage: axfrdns_input_check
	#
	axfrdns_input_check() {
		if [ $ACCESS = allow ] ; then
			if [ -z "$H_DNS_IP" ] ; then
				if [ -z "$DNS_NET" ] ; then
					MSG=$(gettext 'Wenn die IP, Rechner oder das Netzwerk nicht angegeben sind, ist dies ein Sicherheitsrisiko. Bitte aendern Sie dies!')
					msgbox "$gv_Attention" "$MSG"
				fi
			fi
		fi
	}
	#}}}
	# Funktion axfr_haupt_menue{{{
	AXFR_MAIN_MENU=($gv_Display \"\" $gv_Create \"\" $gv_Delete \"\"
		$lv_Database \"$lv_New_Create\" $gv_Back \"\")
	axfr_haupt_menue() {
		menubox "$1" "$AXFR_MAIN_TITLE" "$gv_Menupoint" "$AXFR_MAIN_MENU"
	}
	#}}}
	axfr_haupt_menue
	while [ "$gv_Auswahl" ] ; do
		case $gv_Auswahl in
			HELP*)
				# Hilfetext fuer axfrdns# {{{
				script_help axfrdns_help
				## }}}
				axfr_haupt_menue "${gv_Auswahl#HELP }"
				;;
			$gv_Display)
				# Konfigurationsanzeige# {{{
				if [ -s tcp ] ; then
					view_file tcp
				else
					no_entry_msg
				fi
				## }}}
				axfr_haupt_menue $gv_Display
				;;
			$gv_Create)
				# Dateneingabe{{{
				unset -- H_DNS_IP H_DNS_NAME DNS_NET AXFR ACCESS WERWAS TCP_DATA
				# Funktion axfr_menue{{{
				lv_Access=$(gettext 'Rechte')
				lv_Axfr=$(gettext 'AXFR')
				AXFR_INPUT_TITLE=(${lv_Administration}::${lv_Axfrdns})
				#
				axfr_input_menue() {
					AXFR_INPUT_MENU=($lv_Ip \"$H_DNS_IP\" $gv_Host \"$H_DNS_NAME\"
						$gv_Network \"$DNS_NET\" $lv_Access \"$ACCESS\"
						$lv_Axfr \"$AXFR\" $gv_Save \"\" $gv_Back \"\")
						menubox "$1" "$AXFR_MAIN_TITLE" "$gv_Menupoint" "$AXFR_INPUT_MENU"
				}
				#}}}
				axfr_input_menue
				while [ "$gv_Auswahl" ] ; do
					case $gv_Auswahl in
						HELP*)
							script_help axfrdns_input_help
							axfr_input_menue "${gv_Auswahl#HELP }"
							;;
						$lv_Ip)
							# IP-Adresse eingeben# {{{
							iface_ip $IP
							if [ -n "$gv_Ip" ] ; then
								H_DNS_IP="$gv_Ip"
							else
								unset -- IP
							fi
							## }}}
							axfr_input_menue $lv_Ip
							;;
						$gv_Host)
							# Rechnernamen eingeben# {{{
							conf_hostname -f $H_DNS_NAME
							if [ -n "$gv_Hostname" ] ; then
								H_DNS_NAME="$gv_Hostname"
							else
								unset -- H_DNS_NAME
							fi
							## }}}
							axfr_input_menue $gv_Host
							;;
						$gv_Network)
							# Netzwerk eingeben und ueberpruefen.{{{
							N_TITLE=(${lv_Administration}::${lv_Axfrdns}::${gv_Network})
							N_MSG=$(gettext 'Geben Sie bitte die IP-Adresse ihres Netzwerks an (z.B. 192.168.0).')
							inputbox "$N_TITLE" "$N_MSG"
							if [ "$gv_Auswahl" ] ; then
								ip_analyse "$gv_Auswahl"
								if [[ -n $gv_Ip_Adr ]] ; then
									DNS_NET="$gv_Ip_Adr"
									unset -- H_DNS_IP H_DNS_NAME
								else
									unset -- AXFR
								fi
							else
								no_input_msg
							fi
							#}}}
							axfr_input_menue $gv_Network
							;;
						$lv_Access)
								# Hier werden die Rechte eingestellt, {{{
								# allow oder deny
								if [ "$H_DNS_IP" ] ; then
									WERWAS="$H_DNS_IP"
									ACCESS_MSG=$(gettext 'Soll der Zugriff fuer $H_DNS_IP erlaubt werden?')
								elif [ "$DNS_NET" ] ; then
									WERWAS="$DNS_NET"
									ACCESS_MSG=$(gettext 'Soll der Zugriff fuer $DNS_NET erlaubt werden?')
								else
									WERWAS=global
									ACCESS_MSG=$(gettext 'Soll der Zugriff global erlaubt werden?')
								fi
								#
								ACCESS_TITLE=(${AXFR_MAIN_TITLE}::${lv_Access})
								yesno "$ACCESS_TITLE" "$ACCESS_MSG" ""
								if [ "$gv_Auswahl" = yes ] ; then
									ACCESS=allow
								else
									ACCESS=deny
								fi
								axfrdns_input_check
								#}}}
								axfr_input_menue $lv_Access
								;;
						$lv_Axfr)
							# Hier kann man die Variable AXFR belegen. {{{
								if [ "$NET" ] ; then
									MSG=$(gettext 'Fuer Netze koennen Sie nicht die Variable AXFR belegen.')
									msgbox "$gv_Attention" "$MSG"
								else
									if [ "$H_DNS_NAME" ] ; then
										# Die AXFR Variable kann nur belegt werden, wenn der 
										# volle Rechnername bekannt ist.
										VAR_TITLE=(${AXFR_MAIN_TITLE}::${lv_Axfr})
										VAR_MSG=$(gettext 'Soll die Variable AXFR belegt werden (ja/nein)?')
										yesno "$VAR_TITLE" "$VAR_MSG" ""
										if [ "$gv_Auswahl" = yes ] ; then
											AXFR=yes
										else
											AXFR=no
										fi
									else
										MSG=$(gettext 'Die AXFR Variable kann nur belegt werden, wenn der volle Rechnername bekannt ist.')
										msgbox "$gv_Attention" "$MSG"
									fi
								fi
								#}}}
								axfr_input_menue $lv_Axfr
								;;
						$gv_Save)
								# Alle gemachten Eingaben speichern.{{{
								#
								# Die Variable PTR wird bei der Einstellung und
								# Ueberpruefung der IP-Adresse belegt.
								if [ "$ACCESS" ] ; then
									axfrdns_input_check
									if [ -n "$H_DNS_IP" -a -n "$H_DNS_NAME" ] ; then
										if [ "$AXFR" = yes ] ; then
											TCP_DATA="${H_DNS_NAME}@${H_DNS_IP}:${ACCESS},AXFR=\"${H_DNS_NAME}/${PTR#.}\""
										else
											TCP_DATA="${H_DNS_NAME}@${H_DNS_IP}:${ACCESS}"
										fi
									elif [ -n "$H_DNS_IP" ] ; then
										if [ "$AXFR" = yes ] ; then
											TCP_DATA="${H_DNS_IP}:${ACCESS},AXFR=\"${H_DNS_NAME}/${PTR#.}\""
										else
											TCP_DATA="${H_DNS_IP}:${ACCESS}"
										fi
									elif [ "$DNS_NET" ] ; then
										TCP_DATA="${DNS_NET}.:${ACCESS}"
									else
										TCP_DATA=":$ACCESS"
									fi
									#
									if [ "$TCP_DATA" -a -f tcp ] ; then
										# ein globales deny oder allow herausfiltern und sichern,
										# wird am Schluss wieder angehaengt.
										if [ ${${(M)${(f)"$(< tcp)"}##(#s):*}[1]} ] ; then
											print ${${(M)${(f)"$(< tcp)"}##(#s):*}[1]} >global
										fi
										# hier muss grep, da sonst das Zeichen # Fehler hevorruft.
										grep -v "^$TCP_DATA" tcp >tcp$$
										mv tcp$$ tcp
										>> tcp <<< "$TCP_DATA"
										if [ -f global ] ; then
											grep -v "$(< global)" tcp >tcp$$
											< global >> tcp$$
											mv tcp$$ tcp
											rm -rf global &>/dev/null
										fi
									elif [ "$TCP_DATA" ] ; then
										> tcp <<< "$TCP_DATA" 
									fi
									# fertig
									unset -- H_DNS_IP H_DNS_NAME DNS_NET AXFR ACCESS WERWAS TCP_DATA
									break
								else
									MSG=$(gettext 'Sie muessen erst die Rechte festlegen.')
									msgbox "$gv_Attention" "$MSG"
								fi
								#}}}
								axfr_input_menue
								;;
						$gv_Back)
							break
							;;
					esac
				done
				#}}}
				axfr_haupt_menue $gv_Create
				;;
			$gv_Delete)
				# Daten loeschen{{{
				unset -- D_Menue
				ANZ=1
				while read DATA ; do
					case ${DATA%\=*} in
						*\@[0-9]*.[0-9]*.[0-9]*.[0-9]*:*,AXFR)	
							D_Menue[ANZ]="${DATA%\=*} ${gv_Host}+AXFR off"
							;;
						[0-9]*.[0-9]*.[0-9]*.[0-9]*:*,AXFR)	
							D_Menue[ANZ]="${DATA%\=*} ${gv_Host}+AXFR off"
							;;
						*\@[0-9]*.[0-9]*.[0-9]*.[0-9]*:*)	
							D_Menue[ANZ]="${DATA%\=*} $gv_Host off"
							;;
						[0-9]*.[0-9]*.[0-9]*.[0-9]*:*)	
							D_Menue[ANZ]="$DATA $gv_Host off"
							;;
						[0-9]*\.:*)	
							D_Menue[ANZ]="$DATA $gv_Network off"
							;;
						[0-9]*.[0-9]*\.:*)	
							D_Menue[ANZ]="$DATA $gv_Network off"
							;;
						[0-9]*.[0-9]*.[0-9]*\.:*)	
							D_Menue[ANZ]="$DATA $gv_Network off"
							;;
						:deny|:allow)
							GLOBAL=$(gettext 'global')
							D_Menue[ANZ]="$DATA $GLOBAL off"
							;;
					esac
					(( ANZ++ ))
				done <tcp
				#
				# Eintraege loeschen
				#
				if [ -n "${D_Menue[1]}" ] ; then
					DEL_MENU=($D_Menue)
					DEL_TITLE=(${lv_Administration}::${lv_Axfrdns})
					checklist "" "$AXFR_MAIN_TITLE" "$DEL_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case $gv_Auswahl in
							HELP*)	script_help share/conf_del_help
								checklist "${gv_Auswahl#HELP }" "$AXFR_MAIN_TITLE" "$DEL_MSG" "$DEL_MENU"
								;;
							*)
								# loeschen der ausgewaehlten Daten
								for i in ${=gv_Auswahl} ; {
									grep -v "^$i" tcp >tcp$$
									mv tcp$$ tcp
								}
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				unset -- DATA
				#}}}
				axfr_haupt_menue $gv_Delete
				;;
			$lv_Database)
				# Datenbank neu erstellen
				if [ -s tcp ] ; then
					make &>/dev/null
				fi
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
else
	no_dns_msg $DNS
fi
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
