# Funktion für alle *regexp* oder *pcre* Tabellen{{{
#
# usage: regexp_pcre_table FILE
#
regexp_pcre_table() {
	FILE="$1"
	FLAGS=ix
	autoload -U regexp_pcre_access
	regexp_pcre_access

	# funktion regexp_pcre_menue{{{
	regexp_pcre_menue() {
		case "$TAB" in
			smtpd_command_filter)
				TEXT="${TEXT:-$OldText}"
				REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Flags \"$FLAGS\"
				$lv_Text \"$TEXT\" $gv_Save \"\" $gv_Back \"\")
				;;
			*)
				case "$ACTION" in
					FILTER)
						# mit transport:destination Eingabe
						TRANS="${TRANS:-$OldTrans}"
						if [[ $TRANS == error ]] ; then
							TEXT="${TEXT:-$OldText}"
							REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Flags \"$FLAGS\"
							$lv_Action \"$ACTION\" $lv_Transport \"$TRANS\" $gv_Host \"$HOST\"
							$lv_Port \"$PORT\" $gv_Save \"\" $gv_Back \"\")
						else
							HOST="${HOST:-$OldHost}"
							PORT="${PORT:-$OldPort}"
							REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Flags \"$FLAGS\"
							$lv_Action \"$ACTION\" $lv_Transport \"$TRANS\"
							$lv_Text \"$TEXT\" $gv_Save \"\" $gv_Back \"\")
						fi
						;;
					PREPEND|REPLACE)
						# mit Header Text Eingabe
						TEXT="${TEXT:-$OldText}"
						REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Action \"$ACTION\"
						$lv_Text \"$TEXT\" $gv_Save \"\" $gv_Back \"\")
						;;
					REDIRECT)
						# mit Mailadressen Eingabe
						MAIL="${MAIL:-$OldMail}"
						REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Flags \"$FLAGS\"
						$lv_Action \"$ACTION\" $lv_Mail \"$MAIL\" $gv_Save \"\" $gv_Back \"\")
						;;
					*)
						TEXT="${TEXT:-$OldText}"
						REGEXP_PCRE_MENU=($lv_String \"$STRING\" $lv_Flags \"$FLAGS\"
						$lv_Action \"$ACTION\" $lv_Text \"$TEXT\" $gv_Save \"\" $gv_Back \"\")
						;;
				esac
				;;
		esac
		menubox "$1" "$TABLE_TITLE" "$gv_Menupoint" "$REGEXP_PCRE_MENU"
	}
	#}}}
	# Funktion regexp_pcre_aendern{{{
	#
	regexp_pcre_aendern() {
		regexp_pcre_menue
		while [ "$gv_Auswahl" ] ; do
			case "$gv_Auswahl"  in
				HELP*)	script_help "$TAB_HELP"
					regexp_pcre_menue "${gv_Auswahl#HELP }"
					;;
				$lv_String)
					# Zeichenkette eingeben{{{
					STRING_MSG=$(gettext 'Geben Sie bitte eine Zeichenkette ein nach der gesucht werden soll (man 5 ${TAB_FM}_table).')
					inputbox "$TABLE_TITLE" "$STRING_MSG" "$STRING"
					if [ -n "$gv_Auswahl" ] ; then
						#
						# Eingabe überprüfen auf Anfang (/) und End (/)
						# alles quoten, was irgendwie von der shell ausgewertet wird.
						#
						case $gv_Auswahl in
							/*/ | \!/*/)	
								STRING="${${gv_Auswahl//\"/\\\"}//\$/\\\$}"
								;;
							*)	unset -- STRING
								no_input_msg
								;;
						esac
					else
						no_input_msg
						unset -- STRING
					fi
					#}}}
					regexp_pcre_menue $lv_String
					;;
				$lv_Flags)
					# Flags für den RA auswählen# {{{
					if [[ $TAB_FM == pcre ]] ; then
						flags_choice -p "$FLAGS"
					else
						flags_choice -r "$FLAGS"
					fi
					## }}}
					regexp_pcre_menue $lv_Flags
					;;
				$lv_Action)
					# Aktion ausführen (OK, REJECT....)# {{{
					kwpostfix_action "$ACTION"
					case $ACTION in
						OK|DUNNO)	unset -- TEXT
							;;
					esac
					## }}}
					regexp_pcre_menue $lv_Action
					;;
				$gv_Host)
					# Zielrechner fuer Transport eingeben# {{{
					regexp_pcre_access_host
					if [ -n "$HOST" ] ; then
						unset -- MAIL TEXT
					fi
					## }}}
					regexp_pcre_menue $gv_Host
					;;
				$lv_Mail)
					# Mailadress eingeben# {{{
					regexp_pcre_access_mail
					if [ -n "$MAIL" ] ; then
						unset -- HOST PORT TEXT TRANS
					fi
					## }}}
					regexp_pcre_menue $lv_Mail
					;;
				$lv_Port)
					# Port eingeben# {{{
					regexp_pcre_access_port
					if [[ -n $PORT ]] ; then
						unset -- MAIL TEXT
					fi
					## }}}
					regexp_pcre_menue $lv_Port
					;;
				$lv_Transport)
					# Transportmethode auswählen# {{{
					transport_methode "${TRANS##:*}" "${TRANS##*:}"
					if [[ $WERT == error ]] ; then
						TRANS="$WERT"
						OldTrans="$TRANS"
						unset -- HOST MAIL PORT
					elif [[ -n $WERT ]] ; then
						TRANS="$WERT"
						OldTrans="$TRANS"
						unset -- MAIL TEXT
					else
						unset -- TRANS
						no_input_msg
					fi
					## }}}
					regexp_pcre_menue $lv_Transport
					;;
				$lv_Text)
					# Text eingeben# {{{
					regexp_pcre_access_text
					if [[ -n $WERT ]] ; then
						TEXT="${${gv_Auswahl//\"/\\\"}//\$/\\\$}"
						OldText="$TEXT"
						if [[ $TRANS == error ]] ; then
							unset -- HOST MAIL PORT
						elif [[ -n $TRANS ]] ; then
							unset -- MAIL
						else
							unset -- HOST MAIL PORT TRANS
						fi
					else
						unset -- TEXT
						no_input_msg
					fi
					## }}}
					regexp_pcre_menue $lv_Text
					;;
				$gv_Save)
					# Einstellungen speichern{{{
					if [ -n "$STRING" -a -n "$ACTION" ] ; then
						case "$ACTION" in
							OK|DUNNO)
								# ohne Text# {{{
								if [ "$AENDERN_ADR" ] ; then
									grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
									>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION"
									mv $FILE$$ $FILE
								else
									grep -Fv "$STRING" $FILE >$FILE$$
									>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION"
									mv $FILE$$ $FILE
								fi
								break
								## }}}
								;;
							REDIRECT)
								# mit Mail# {{{
								case "$MAIL" in
									*@*.*)
										if [ "$AENDERN_ADR" ] ; then
											grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
											>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION $MAIL"
											mv $FILE$$ $FILE
										else
											grep -Fv "$STRING" $FILE >$FILE$$
											>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION $MAIL"
											mv $FILE$$ $FILE
										fi
										break
										;;
									*)
										# Nachricht das man eine Mailadresse mit angeben muss.
										MSG=$(gettext 'Sie muessen mindestens die Menuepunkte Zeichenkette, Aktion und Mail mit Werten belegen.')
										msgbox "$gv_Attention" "$MSG"
										regexp_pcre_menue
										;;
								esac
								## }}}
								;;
							FILTER)
								# mit Transport+Host+Port# {{{
								if [ "$TRANS" -a "$HOST" -a "$PORT" ] ; then
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${HOST}:${PORT}"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${HOST}:${PORT}"
										mv $FILE$$ $FILE
									fi
									break
								# Transport+Text
								elif [ "$TRANS" -a "$TEXT" ] ; then
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${TEXT}"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${TEXT}"
										mv $FILE$$ $FILE
									fi
									break
								# Transport+Host oder nur Transport
								elif [ -n "$TRANS" ] ; then
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${HOST}"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TRANS}:${HOST}"
										mv $FILE$$ $FILE
									fi
									break
								else
									# Nachricht das man mind. Transport etc. angegeben werden muss.
									msgbox "$gv_Attention" "$REGEXP_MINIMUM_MENUPOINTS_MSG"
									regexp_pcre_menue
								fi
								## }}}
								;;
							PREPEND|REPLACE)
								# Mit Text, Tausch oder hinzufuegen von Headerzeilen# {{{
								if [ -n "$TEXT" ] ; then
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION $TEXT"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION $TEXT"
										mv $FILE$$ $FILE
									fi
									break
								else
									# Nachricht das man mind. Text (Headerzeile)
									# angegeben werden muss.
									MSG=$(gettext 'Sie muessen mindestens die Menuepunkte Zeichenkette, Aktion und Text (Headerzeile) mit Werten belegen.')
									msgbox "$gv_Attention" "$MSG"
									regexp_pcre_menue
								fi
								## }}}
								;;
							*)
								# mit/ohne Text# {{{
								if [ -n "$TEXT" ] ; then
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TEXT//\\\$/\$}"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION ${TEXT//\\\$/\$}"
										mv $FILE$$ $FILE
									fi
								else
									if [ "$AENDERN_ADR" ] ; then
										grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION"
										mv $FILE$$ $FILE
									else
										grep -Fv "$STRING" $FILE >$FILE$$
										>> $FILE$$ <<< "${STRING}${FLAGS} $ACTION"
										mv $FILE$$ $FILE
									fi
								fi
								break
								## }}}
								;;
						esac
						break
					elif [ -n "$STRING" -a -z "$ACTION" ] ; then
						if [ -n "$TEXT" ] ; then
							if [ "$AENDERN_ADR" ] ; then
								grep -Fv "$AENDERN_ADR" $FILE >$FILE$$
								>> $FILE$$ <<< "${STRING}${FLAGS} ${TEXT//\\\$/\$}"
								mv $FILE$$ $FILE
							else
								grep -Fv "$STRING" $FILE >$FILE$$
								>> $FILE$$ <<< "${STRING}${FLAGS} ${TEXT//\\\$/\$}"
								mv $FILE$$ $FILE
							fi
						else
							MSG=$(gettext 'Sie muessen mindestens die Menuepunkte Zeichenkette und Text mit Werten belegen.')
							msgbox "$gv_Attention" "$MSG"
						fi
						break
					else
						MSG=$(gettext 'Sie muessen mindestens die Menuepunkte Zeichenkette und Aktion oder Zeichenkette und Text mit Werten belegen.')
						msgbox "$gv_Attention" "$MSG"
						regexp_pcre_menue
					fi
					#}}}
					;;
				$gv_Back)	break
					;;
			esac
		done
	}
	#}}}
	tabellen_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help tab_help
				tabellen_menue "${gv_Auswahl#HELP }"
				;;
			$gv_Display)
				# Ansicht der Einträge
				tab_ansicht
				tabellen_menue $gv_Display
				;;
			$gv_Create)
				# Werte anlegen
				unset -- STRING FLAGS ACTION MAIL TRANS HOST TEXT AENDERN_ADR \
					OldHost OldMail OldPort OldText OldTrans
				regexp_pcre_aendern
				tabellen_menue $gv_Create
				;;
			$gv_Edit)
				# Eintraege bearbeiten# {{{
				edit_file "$TABLE_TITLE" "$FILE"
				## }}}
				tabellen_menue $gv_Edit
				;;
			$gv_Change)
				# Einträge verändern{{{
				unset -- STRING FLAGS ACTION MAIL TRANS HOST TEXT AENDERN_ADR \
					OldHost OldMail OldPort OldText OldTrans
				key_value "$FILE"
				if [[ -n ${AUSWAHL[1]} ]] ; then
					CHANGE_MENU=($AUSWAHL)
					menubox "" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help tabs_help
								menubox "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
								;;
							*)
								# Auswahl verändern
								print "${gv_Auswahl//\\/\\\\\\}" | \
									sed -e 's#\\#\\\\\\#g ; 
									s#\"#\\\\\\"#g ; s#\$#\\\\\\$#g' | \
								while read String Action REST ; do
									case "$String" in
										/*/*|\!/*/*)	STRING="${String%/*}/"
											FLAGS="${String##*/}"
											;;
										*)	STRING="$String"
											unset -- FLAGS
											;;
									esac
									ACTION="$Action"
									#
									case "$ACTION" in
										PREPEND|REPLACE)
											TEXT="$REST"
											OldText="$TEXT"
											;;
										REDIRECT)
											## mit Mail {{{
											case "$REST" in
												*@*.*)
													MAIL="$REST"
													OldMail="$MAIL"
													;;
											esac
											## }}}
											;;
										FILTER)
											## mit Transport+Host+Port {{{
											case "$REST" in
												*:*:*)
													TRANS="${REST%%:*}"
													OldTrans="$TRANS"
													if [ "$TRANS" != error ] ; then
														HOST="${${(ws,:,)${REST}}[2]}"
														PORT="${REST##*:}"
														OldHost="$HOST"
														OldPort="$PORT"
													else
														TEXT="${REST#*:}"
														OldText="$Text"
													fi
													;;
												*:*)
													TRANS="${REST%:*}"
													OldTrans="$TRANS"
													if [ "$TRANS" != error ] ; then
														HOST="${REST#*:}"
														OldHost="$HOST"
													else
														TEXT="${REST#*:}"
														OldText="$Text"
													fi
													;;
												*:)
													TRANS="${REST%:*}"
													OldTrans="$TRANS"
													;;
											esac
											## }}}
											;;
										OK|DUNNO)
											# ohne alles
											;;
										*)
											case "$TAB" in
												smtpd_command_filter)
													# Mit Text ohne Actions
													TEXT="$ACTION $REST"
													OldText="$TEXT"
													unset -- ACTION
													;;
												*)
													# Mit nur Text
													TEXT="$REST"
													OldText="$TEXT"
													;;
											esac
											;;
									esac
								done
								AENDERN_ADR="${STRING}${FLAGS}"
								regexp_pcre_aendern
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Change
				;;
			$gv_Delete)
				# Einträge löschen{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL_MULTI[1]} ]] ; then
					DEL_MENU=($AUSWAHL_MULTI)
					checklist "" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help kwpostfix_del_help
								checklist "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
								;;	
							*)	# Löschen
								 while read ADRESS ; do
									grep -Fv "$ADRESS" $FILE >$FILE$$
									mv $FILE$$ $FILE
								done <${gv_LogFile}$$
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Delete
				;;
			$lv_Db)
				# Einstellungen neu einlesen
				postfix_start_reload
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
