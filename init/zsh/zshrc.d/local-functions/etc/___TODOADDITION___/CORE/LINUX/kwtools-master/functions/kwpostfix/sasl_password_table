# Funktion sasl_password_table{{{
#
sasl_password_table() {
	FILE="$1"
	# Variable fuer die Hilfe
	lv_Sasl_Passwd=$(gettext 'SASL Passwort')

	# Funktion sasl_password_menue{{{
	sasl_password_menue() {
		SASL_PASSWD_MENU=($lv_Host_Domain \"$ADR\" $gv_User \"$SP_User\"
		$gv_Passwd \"$SP_Passwd\" $gv_Save \"\" $gv_Back \"\")
		menubox "$1" "$TABLE_TITLE" "$gv_Menupoint" "$SASL_PASSWD_MENU"
	}
	#}}}
	# Funktion sasl_password_aendern{{{
	#
	sasl_password_aendern() {
	sasl_password_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help "$TAB_HELP"
				sasl_password_menue "${gv_Auswahl#HELP }"
				;;
			$lv_Host_Domain)
				# Hosts/Domains eingeben{{{
				HOST_DOMAIN_MSG=$(gettext 'Geben Sie den Namen eines Rechners oder einer Domain ein (Bsp. host.domain.de | domain.de).')
				inputbox "$TABLE_TITLE" "$HOST_DOMAIN_MSG" "$ADR"
				if [[ ${(w)#gv_Auswahl} == 1 ]] ; then
					ADR="$gv_Auswahl"
				else
					unset -- ADR
				fi
				#}}}
				sasl_password_menue $lv_Host_Domain
				;;
			$gv_User)
				# Benutzer eingeben# {{{
				SP_USER_MSG=$(gettext 'Geben Sie einen Benutzer fuer die Authentifizierung ein.')
				inputbox "$TABLE_TITLE" "$SP_USER_MSG" "$SP_User"
				if [ "$gv_Auswahl" ] ; then
					SP_User="$gv_Auswahl"
				else
					unset -- SP_User
				fi
				## }}}
				sasl_password_menue $gv_User
				;;
			$gv_Passwd)
				# Passsword eingeben# {{{
				SP_PASSWD_MSG=$(gettext 'Geben Sie ein Passwort fuer die Authentifizierung ein.')
				inputbox "$TABLE_TITLE" "$SP_PASSWD_MSG" "$SP_Passwd"
				if [[ -n $gv_Auswahl ]] ; then
					SP_Passwd="$gv_Auswahl"
				else
					unset -- SP_Passwd
				fi
				## }}}
				sasl_password_menue $gv_Passwd
				;;
			$gv_Save)
				# Einstellungen speichern{{{
				#
				if [ -n "$ADR" -a -n "$SP_User" -a -n "$SP_Passwd" ] ; then
					if [ -n "$AENDERN_ADR" -a -n "$AENDERN_ADR1" ] ; then
						sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1}.*#${ADR}\t${SP_User}:${SP_Passwd}#" $FILE >$FILE$$
						mv $FILE$$ $FILE
					else
						grep -v "^${ADR}[[:space:]]${SP_User}:${SP_Passwd}" $FILE >$FILE$$
						>> $FILE$$ <<< "$ADR	${SP_User}:${SP_Passwd}"
						mv $FILE$$ $FILE
					fi
					unset -- SP_Passwd
					break
				else
					MSG=$(gettext 'Sie muessen alle Menuepunkte mit Werten belegen.')
					msgbox "$gv_Attention" "$MSG"
					sasl_password_menue
				fi
				#}}}
				;;
			$gv_Back)	break
				;;
		esac
	done
	}
	#}}}
	#
	tabellen_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help tab_help
				tabellen_menue "${gv_Auswahl#HELP }"
				;;
			$gv_Display)
				# Ansicht der Einträge
				tab_ansicht
				tabellen_menue $gv_Display
				;;
			$gv_Create)
				# Werte anlegen
				unset -- ADR AENDERN_ADR AENDERN_ADR1 SP_User SP_Passwd
				sasl_password_aendern
				tabellen_menue $gv_Create
				;;
			$gv_Edit)
				# Eintraege bearbeiten# {{{
				edit_file "$TABLE_TITLE" "$FILE"
				## }}}
				tabellen_menue $gv_Edit
				;;
			$gv_Change)
				# Einträge verändern{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL[1]} ]] ; then
					CHANGE_MENU=($AUSWAHL)
					menubox "$C_CHOICE" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help tabs_help
								menubox "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
								;;
							*)
								# Auswahl aendern
								C_CHOICE="$gv_Auswahl"
								ADR="${${=gv_Auswahl}[1]}"
								SP_User="${${${=gv_Auswahl}[2]}%:*}"
								SP_Passwd="${${${=gv_Auswahl}[2]}#*:}"
								AENDERN_ADR="$ADR"
								AENDERN_ADR1="${${=gv_Auswahl}[2]}"
								sasl_password_aendern
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Change
				;;
			$gv_Delete)
				# Eintraege loeschen{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL_MULTI[1]} ]] ; then
					DEL_MENU=($AUSWAHL_MULTI)
					checklist "" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help kwpostfix_del_help
								checklist "${gv_Auswahl#HELP }" "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
								;;	
							*)	# löschen
								while read ADRESS REST ; do
									grep -v "^${ADRESS}[[:space:]]${REST}" $FILE >$FILE$$
									mv $FILE$$ $FILE
								done < $gv_LogFile$$
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue $gv_Delete
				;;
			$lv_Db)
				# Datenbank neu erzeugen und Postfix anweisen die Einstellungen neu einzulesen
				db_new_reread "$TAB_FM" "$FILE"
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
