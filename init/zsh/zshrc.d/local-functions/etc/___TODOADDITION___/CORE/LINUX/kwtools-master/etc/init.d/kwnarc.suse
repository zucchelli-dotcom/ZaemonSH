#! /bin/sh
#
# Copyright (c) 2002-2010 Netzworkk, Germany.
#
# Author: Kai Wilke <kiste@netzworkk.de>
#
# /etc/init.d/kwnarc
#
#   and its symbolic link
#
# /usr/sbin/rckwnarc
#
### BEGIN INIT INFO
# Provides:          kwnarc
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts/stops/... your firewall per iptables
# Description:       starts/stops/reloads the configuration and displays
#                    the status from your firewall
### END INIT INFO

kwnarc_BIN=/usr/sbin/kwnarc
test -x $kwnarc_BIN || exit 5

if [ -f /etc/kwtools/kwnarc.conf ] ; then
	. /etc/kwtools/kwnarc.conf
elif [ -f /usr/local/etc/kwtools/kwnarc.conf ] ; then
	. /usr/local/etc/kwtools/kwnarc.conf
fi

test "$START_IPTABLES" = "yes" || exit 6

. /etc/rc.status

# Reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0	  - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

case "$1" in
    chains)
		$kwnarc_BIN chains
		# Remember status and be verbose
		rc_status
        ;;
    conntrack)
		$kwnarc_BIN conntrack
		# Remember status and be verbose
		rc_status
        ;;
    start)
		$kwnarc_BIN start
		# Remember status and be verbose
		rc_status -v
        ;;
    stop)
		$kwnarc_BIN stop
		# Remember status and be verbose
		rc_status -v
        ;;
    restart|reload|force-reload)
        $0 stop
		$0 start
		rc_status
        ;;
    status)
		$kwnarc_BIN status
		# Remember status and be verbose
		rc_status
        ;;
    *)
        echo "Usage: $0 {chains|conntrack|start|stop|reload|force-reload|restart|status}"
        exit 1
esac
rc_exit
