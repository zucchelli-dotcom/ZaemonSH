#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2019. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# composer :
# function/shell script "composer" for opening html files for editing
# using Mozilla or Netscape composer

# open Mozilla.app or Netscape.app in composer mode, optionally with 
# a given file name as an argument.  Uses mozilla.app by default if both
# it and netscape are present, unless -n flag is issued in which case
# netscape is then used.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 04/01/2018 :
#  • Modify function presentation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME

VERSION="0.0.1"
FCT_NAME="$(echo $0)"

#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
    usage:  [  ]

    Examples:
                                                 # .

  ${NC}
__EOF__
}

#-------------------------------------------------------------------------------------------#
#                                              SCRIPT
#-------------------------------------------------------------------------------------------#
banner
# set -x
# First, find Mozilla or equivalent.
if [[ -d /Applications/SeaMonkey ]];then
    seamonkey_path=/Applications/SeaMonkey.app
elif [[ -d /Applications/Mozzila.app ]];then
    mozilla_path=/Applications/Mozzila.app
elif [[  -d /Applications/Netscape.app ]];then
    netscape_path=/Applications/Netscape.app
    
elif [[ -d /Applications/Browsers/SeaMonkey.app ]];then
    seamonkey_path=/Applications/Browsers/SeaMonkey.app
elif [[ -d /Applications/Browsers/Mozzila.app ]];then
    mozilla_path=/Applications/Browsers/Mozzila.app
elif [[  -d /Applications/Browsers/Netscape.app ]];then
    netscape_path=/Applications/Browsers/Netscape.app

elif [[ ! -d $netscape_path &&  -x /usr/bin/mdfind ]];then
    netscape_path=($(mdfind netscape | grep Netscape.app | head -n 1 ))
elif [[ ! -d $netscape_path && -f /var/db/locate.database ]];then
    netscape_path=($(command locate Netscape.app | head -n 1 ))
elif [[ ! -d $seamonkey_path &&  -x /usr/bin/mdfind ]];then
     seamonkey_path=($(mdfind seamonkey | grep SeaMonkey.app | head -n 1 ))
elif [[ ! -d $seamonkey_path &&  -f /var/db/locate.database ]];then
     seamonkey_path=($(command locate SeaMonkey.app | head -n 1 ))
elif [[ ! -d  $mozilla_path  &&  -x /usr/bin/mdfind ]];then
    mozilla_path=($(mdfind mozilla | grep Mozilla.app | head -n 1 ))
elif [[ ! -d  $mozilla_path  &&  -f /var/db/locate.database ]];then
     mozilla_path=($(command locate Mozilla.app | head -n 1 ))
else    
    print "I cannot find SeaMonkey, Mozilla or Netscape"
    print "Please run /etc/weekly to generate the locate database"
    return 1
fi

if [[ $1 == '-n' ||  $1 == '-s' ]];then
    # Add future options in the case statement
    while getopts ":n" opt; do
            case $opt in
                    n ) true ;;
                    s ) true ;;
            esac
    done

    shift $(($OPTIND - 1))
    
    if [[ $1 == '-s' ]];then
        osascript -e "tell app \"Netscape\" to quit"  >/dev/null 2>&1
        osascript -e "tell app \"mozilla\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"SeaMonkey.app\" to quit"   >/dev/null 2>&1
        print "Editing file $@ using SeaMonkey composer..."
        fullpath=($seamonkey_path/Contents/MacOS/seamonkey-bin) >/dev/null 2>&1
        $fullpath -editor file:$PWD/"$@" >/dev/null 2>&1 &
        return $? 
    
    elif [[ $1 == '-n' ]];then
        osascript -e "tell app \"Netscape\" to quit"  >/dev/null 2>&1
        osascript -e "tell app \"mozilla\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"SeaMonkey.app\" to quit"   >/dev/null 2>&1
        print "Editing file $@ using Netscape composer..."
        fullpath=($netscape_path/Contents/MacOS/mozilla-bin) >/dev/null 2>&1
        $fullpath -editor file:$PWD/"$@" >/dev/null 2>&1 &
        return $?
    fi    
else
    if [[ -d $seamonkey_path  && $1 != '-n' ]];then
        print "Editing file $@ using SeaMonkey composer..."
        osascript -e "tell app \"Netscape\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"mozilla.app\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"SeaMonkey.app\" to quit"   >/dev/null 2>&1
        if [[ -x $seamonkey_path/Contents/MacOS/seamonkey-bin ]];then
          fullpath=($seamonkey_path/Contents/MacOS/seamonkey-bin) >/dev/null 2>&1
        elif [[ -x $seamonkey_path/Contents/MacOS/seamonkey ]];then
          fullpath=($seamonkey_path/Contents/MacOS/seamonkey) >/dev/null 2>&1
        else
          print "Unable to locate the SeaMonkey binary.  Try updating the locate database."
          return 78
        fi
        $fullpath -editor file:$PWD/"$@" >/dev/null 2>&1  &
        return $? 
    elif [[ -d $mozilla_path  && $1 != '-n' ]];then
        print "Editing file $@ using Mozilla composer..."
        osascript -e "tell app \"Netscape\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"mozilla.app\" to quit"   >/dev/null 2>&1
        osascript -e "tell app \"SeaMonkey.app\" to quit"   >/dev/null 2>&1
        if [[ -x $mozilla_path/Contents/MacOS/mozilla-bin ]];then
          fullpath=($mozilla_path/Contents/MacOS/mozilla-bin) >/dev/null 2>&1
        elif [[ -x $mozilla_path/Contents/MacOS/mozilla ]];then
          fullpath=($mozilla_path/Contents/MacOS/mozilla) >/dev/null 2>&1
        else
          print "Unable to locate the Mozilla binary.  Try updating the locate database."
          return 78
        fi
        $fullpath -editor file:$PWD/"$@" >/dev/null 2>&1  &
        return $? 
    elif [[ -d $netscape_path && $1 != '-n' ]];then
        print "Editing file $@ using Netscape composer..."
        osascript -e "tell app \"Netscape\" to quit"
        osascript -e "tell app \"mozilla.app\" to quit"
        osascript -e "tell app \"SeaMonkey.app\" to quit"   >/dev/null 2>&1
        fullpath=($netscape_path/Contents/MacOS/mozilla-bin) >/dev/null 2>&1 
        $fullpath -editor file:$PWD/"$@" >/dev/null 2>&1  &
        return $? 
    else
        # give up and open with default application
        print "I cannot find Netscape or Mozilla, so I will open this with the default application..."
        command open "$@"
        return $?
    fi
fi
