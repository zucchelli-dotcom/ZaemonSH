#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2019. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# printer :
# Control printer with CLI.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#
# 11/01/2018 :
#  • Test if cups is active. 
#  • Add More options.
#  • Add completion.

 
####################################################################################################
#
# ABOUT THIS PROGRAM
#
# NAME
#   unlockAddPrinters.sh -- Unlock the security restriction for standard users' ability to add printers
#
# SYNOPSIS
#   sudo unlockAddPrinters.sh
#   sudo unlockAddPrinters.sh <mountPoint> <computerName> <username> <locked>
#
#   If the $locked parameter is specified as true or false (in parameter 4), this is the setting
#   that will be set.
#
#   If no parameter is specified for parameter 4, the hardcoded value in the script will be used.
#
# DESCRIPTION
#   This script unlocks or locks the system preference authorization to allow or disallow users to
#   add printers, as reflected in the Print & Fax System Preference pane.  It has been designed to 
#   function on Mac OS X 10.5.7, when the restriction first appeared.
#
#   The locked/unlock value will be set according to the value specified in the paramter $locked.  
#   It can be used with a hardcoded value in the script, or read in as a parameter.  Since the 
#   Casper Suite defines the first three parameters as (1) Mount Point, (2) Computer Name and 
#   (3) username, we are using the forth parameter ($4) as the passable parameter.  If no parameter
#   is passed, then the hardcoded value will be used.
#
####################################################################################################
#
####################################################################################################
#
# DEFINE VARIABLES & READ IN PARAMETERS
#
####################################################################################################
# HARDCODED VALUE FOR "locked" IS SET HERE
# targetVolume=""
# locked="false"
# # CHECK TO SEE IF A VALUE WAS PASSED IN PARAMETER 3 AND, IF SO, ASSIGN TO "targetVolume"
# if [ "$1" != "" ] && [ "$targetVolume" == "" ]; then
#     targetVolume=$1
# fi
# # CHECK TO SEE IF A VALUE WAS PASSED IN PARAMETER 4 AND, IF SO, ASSIGN TO "locked"
# if [ "$4" != "" ] && [ "$locked" == "" ]; then
#     locked=$4
# fi
####################################################################################################
# 
# SCRIPT CONTENTS - DO NOT MODIFY BELOW THIS LINE
#
####################################################################################################
# Get the major version of the OS and format it in an acceptable form for shell scripting
# OS=`/usr/bin/defaults read /System/Library/CoreServices/SystemVersion ProductVersion | awk '{print substr($1,1,4)}'`

# if [[ "$OS" < "10.5" ]]; then
#     echo "This machine is not running Mac OS X 10.5.7 or higher, and therefore does not need this script to unlock the setting."
# else
#     # Get the minor version of the OS in a format acceptable to evaluate in shell scripting
#     OS=`/usr/bin/defaults read /System/Library/CoreServices/SystemVersion ProductVersion | awk '{print substr($1,4,4)}'`
#     if [[ "$OS" > "5.6" ]]; then
#         case $locked in "false" | "FALSE" | "no" | "NO")
#             echo "Adding everyone group to the Printer Administrators group..."
#             /usr/sbin/dseditgroup -o edit -n /Local/Default -a everyone -t group lpadmin;;
#         "true" | "TRUE" | "yes" | "YES")
#             echo "Removing everyone group from the Printer Administrators group..."
#             /usr/sbin/dseditgroup -o edit -n /Local/Default -d everyone -t group lpadmin;;
#         *)
#             echo "Error:  The parameter 'locked' is blank or is set to an invalid value.  Please specify a valid value such as YES, yes, TRUE, true, NO, no, FALSE, false."
#         esac
#     else
#         echo "This machine is not running Mac OS X 10.5.7 or higher, and therefore does not need this script to unlock the setting."
#     fi
# fi
####################################################################################################



#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 04/01/2018 :
#  • Modify function presentation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME

VERSION="0.0.3"
FCT_NAME="$(echo $0)"

#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
    cat<<__EOF__
    ${RED}
    usage: printer [ settings | name | queue | drivers | web | help ]

    Examples:
      printer settings    # Printer settings
      printer name        # Display printer names on system
      printer queue       # Display items in printer queue on system
      printer drivers     # Display all printer drivers
      printer web         # Enable and show web interface
    ${NC}
__EOF__
}

#-------------------------------------------------------------------------------------------#
#                                              SCRIPT
#-------------------------------------------------------------------------------------------#
banner


case $1 in
    help)
        help
        ;;
    settings)
        /usr/bin/lpoptions -l
        ;;
    name)
        lpstat -p | awk '{print $2}'
        ;;
    queue)
        lpstat -p | awk '{print $2}' | xargs -n1 lpq -P
        ;;
    drivers)
        lpinfo -m
        ;;
    web)
        cupsctl WebInterface=yes && open http://localhost:631/printers
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
