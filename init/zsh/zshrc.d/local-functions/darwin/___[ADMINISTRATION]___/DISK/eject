#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2019. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# eject :
# Eject volumes from CLI.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#
# TO DO:
# 019-07-30
# • Verbose doesn't currently do anything.

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 
#
# 
# v0.1   2007-05-21 
# • Morgan Aldridge <morgant@makkintosshu.com>
#   Initial version.
# v0.2   2010-10-24 
# • Morgan Aldridge Minor cleanup. Automatically prepend /Volumes/ to volume name if omitted.
# v0.3   2010-12-07 
# • Morgan Aldridge Added "-f" option to force a disk to eject. Now supports ejecting of network volumes.
# v0.4   2019-07-30 

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME force vervose help
VERSION="0.0.4"
FCT_NAME="$(echo $0)"

# global variables
force=false
verbose=false
help=false


#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
	printf "Usage: eject [options] volume ...\n"
	printf "  -f            force volume to be ejected, even if files/directories are open\n"
	printf "  -v		verbose output\n"
	printf "  -h		print these usage instructions\n"

  ${NC}
__EOF__
}

#-------------------------------------------------------------------------------------------#
#                                              SCRIPT
#-------------------------------------------------------------------------------------------#
banner

# see if any arguments were passed in
if [ $# -gt 0 ]; then
	# if so, step through them all and process them
	while [ $# -gt 0 ]; do
		# see if the user intended us to run in verbose mode
                if [ "$1" = "-v" ]; then
                        shift
                        verbose=true
		# see if the user intended us to force the action
		elif [ "$1" = "-f" ]; then
			shift
			force=true
                # see if the user requested help
                elif [ "$1" = "-h" ]; then
                        shift
                        help=true
                        usage
		else
                        # don't bother doing anything if the user requested help
                        if ! $help; then
				if $force; then f="force"; fi
				# try to detect whether the user prepended "/Volumes/" to the volume name
				if [ "${1:0:9}" = "/Volumes/" ]; then
					vol="$1"
				else
					vol="/Volumes/$1"
				fi
				# determine the type of filesystem of the mount so we can unmount network volumes appropriately
				mnt_info=$(mount | grep "$vol")
				IFS=\(, read -r -d '' _ fs_type _ <<< "$mnt_info"
				if [[ ( $fs_type == "afpfs" ) || ( $fs_type == "smbfs" ) || ( $fs_type == "webdav" ) ]]; then
					diskutil unmount $f "$vol"
				else
					if $force; then
						diskutil unmountDisk $f "$vol"
					else
						diskutil eject "$vol"
					fi
				fi
                        fi
                        shift
                fi
	done
else
	printf "No volumes were specified to be ejected.\n\n"
	usage
fi
