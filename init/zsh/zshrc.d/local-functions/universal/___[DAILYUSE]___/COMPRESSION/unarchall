#! /usr/bin/env zsh -f
##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# unarchall :
# Decompress all archives in specified directory.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 13/0/2018 :
#  • Modify function presentation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME LISTFILES EXCLFILES

VERSION="0.0.1"
FCT_NAME="unarchall"

LISTFILES=$(find -type f -print0 )
# Liste fichiers compressés
EXCLFILES=$(find -regextype posix-extended  -regex '.*\.(gz|zip)')


#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
    usage:  [  ]

    Examples:
                                                 # .

  ${NC}
__EOF__
}

function argu () {
	if [[ ! $1 ]]; then
		echo "No arguments"
		echo Usage
		return 0
	fi

	if [[ $# > "1" ]];then
		echo "Too much arguments"
		echo Usage
		return 0
	fi

	if [[ ! -e $1 ]]  && [[ ! -d $1 ]]; then
		echo "Directory Don't exist"
		echo Usage
		return 0
	fi
}

function untargz () {

	#find -type f -print0 | xargs -0 -I {} tar -cvzf {}.tar.gz {} && wait 
	find . -type f -print0 | while read -d $'\0' file; do
		if [[ ${file##*.}  == *(gz|tar)  ]]; then		
		#if [[ ${file##*.}  == *(xz|gz|7z|bz2|zip|tar)  ]]; then
		 	CURDIR=$(echo $(pwd))
		 	#cd $CURDIR
		 	echo "               ----------------------------------------------------------------"
		 	echo ""
		 	file -0 "${file}" 
		 	wait
		 	tar -xf "${file}"
		 	echo "                ----------------------------------------------------------------"
		 	echo ""
		fi	
		done
}

# function exact ()  {    # Handy Extract Program.
# 	# find . -type f -print0 | while read -d $'\0' file; do
# 	# 	echo "                ----------------------------------------------------------------"
# 	# 	echo ""		
# 	# 	if [[ ${file##*.*.}  == *(tar.gz|tar.bz2)  ]]; then
# 	# 	 	file -0  ${file}
# 	# 	 	wait
# 	#        	case "${file#*.*.}" in
# 	#              *tar.bz2)   tar xvjf   "${file}"     ;;
# 	#              *tar.gz)    tar xvzf   "${file}"     ;;
# 	#              *)           echo "'${file}' cannot be extracted via >extract<" ;;
# 	#         esac
# 	#     fi    
# 	#     wait
# 	# 	if [[ ${file##*.}  == *(gz|bz2|tar|tbz2|zip|tgz)  ]]; then
# 	# 	 	file -0  ${file}
# 	# 	 	wait
# 	#         case "${file##*.}" in
# 	#              *tar)       tar xvf    "${file}"     ;;
# 	#              *bz2)       bunzip2    "${file}"     ;;
# 	#              #*rar)      unrar x    "${file}"     ;;
# 	#              *gz)        gunzip     "${file}"     ;;
# 	#              *tar)       tar xvf    "${file}"     ;;
# 	#              *bz2)      tar xvjf   "${file}"     ;;
# 	#              *tgz)       tar xvzf 	 "${file}"     ;;
# 	#              *zip)       unzip      "${file}"     ;;
# 	#              #*.Z)        uncompress "${file}"   ;;
# 	#              #*.7z)       7z x $1         ;;
# 	#              *)           echo "'${file}' cannot be extracted via >extract<" ;;
# 	#         esac

# 	#     fi
# 	#     echo "                ----------------------------------------------------------------"
# 	# 	echo ""
# 	# done
# }

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
banner
if [[ ! $1 ]]; then
	echo "No arguments"
	echo Usage
	return 1
fi

if [[ $# > "1" ]];then
	echo "Too much arguments"
	echo Usage
	return 1
fi

if [[ ! -e $1 ]]  &&  [[ ! -d $1 ]]; then
	echo "Directory Don't exist"
	echo Usage
	return 1
fi
wait



if [[ $(ls "${@}") != "" ]]; then
	cd "${@}"
	untargz
	wait
	return 0
else 
	echo "Internal Error"
	wait
	return 1
fi
