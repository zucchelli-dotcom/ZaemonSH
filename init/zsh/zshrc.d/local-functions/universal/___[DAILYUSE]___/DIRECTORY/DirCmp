#!/usr/bin/env zsh

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# DirCmp :
# 
#
# Copyright 1995, by Hewlett-Packard Company
#
# The code in this file is from the book "Shell Programming
# Examples" by Bruce Blinn, published by Prentice Hall.
# This file may be copied free of charge for personal,
# non-commercial use provided that this notice appears in
# all copies of the file.  There is no warranty, either
# expressed or implied, supplied with this code.
#
# NAME
#    DirCmp - compare the files in two directories
#
# SYNOPSIS
#    DirCmp [-v] [dir1] dir2
#
# DESCRIPTION
#    This command compares the files in two directories and
#    lists the files that are not the same.  There will be
#    three separate lists for: 
#
#    1. Files not in the first directory, but in the second
#    2. Files not in the second directory, but in the first
#    3. Files in both directories, but not the same
#
#    -v   Verbose option.  This option prints the lines that
#         are different rather than just the name of the
#         file when the file is in both directories, but the
#         files are not the same.
#
# RETURN VALUE
#    0    The directories are the same
#    1    Usage error or abnormal termination
#    2    The directories are not the same
#


#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 05/08/2020 :
#  • Create this one .

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME CMDNAME USAGE CURDIR DIR1 DIR2 DIR1_FILES DIR2_FILES ALL_FILES COMMON_FILES
TMP FOUND FIRST VERBOSE

VERSION="0.0.1"
FCT_NAME="$(echo $0)"

CMDNAME=`basename $0`
USAGE="Usage: $CMDNAME [-v] [dir1] dir2"

CURDIR=`pwd`                  # Current directory
DIR1=                         # Source directory
DIR2=                         # Target directory
DIR1_FILES=/tmp/files1.$$     # Files in dir1
DIR2_FILES=/tmp/files2.$$     # Files in dir2
ALL_FILES=/tmp/allfiles.$$    # Files in dir1 or dir2
COMMON_FILES=/tmp/comfiles.$$ # Files in dir1 and dir2
TMP=/tmp/tmp.$$               # Temporary file
FOUND=FALSE                   # Differences found?
FIRST=
VERBOSE=FALSE

trap 'rm -f /tmp/*.$$; return 1' 1 2 3 15


#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  echo "${RED}"
  cat<<__EOF__
    usage: $FCT_NAME [  ]

    Examples:
                                                 # .


__EOF__
echo ${NC}
}

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
emulate -L zsh
banner
#
# Parse the command options.
#
while :
do
     case $1 in
          -v)  VERBOSE=TRUE
               shift
               ;;
          --)  shift
               break
               ;;
          -*)  echo "$USAGE" 1>&2
               return 1
               ;;
          *)   break
               ;;
     esac
done

#
# Get command line arguments.
#
if [ $# -eq 1 ]; then
     DIR1="."
     DIR2="$1"
elif [ $# -eq 2 ]; then
     DIR1="$1"
     DIR2="$2"
else
     echo "$USAGE" 1>&2
     return 1
fi

#
# Check the directories.
#
if [ ! -d $DIR1 ]; then
     echo "$DIR1 is not a directory." 1>&2
     return2
fi

if [ ! -d $DIR2 ]; then
     echo "$DIR2 is not a directory." 1>&2
     return2
fi

#
# Find the files to compare.
#
cd $DIR1
find . \( -type f -o -type l \) -print | sort >$DIR1_FILES
cd $CURDIR

cd $DIR2
find . \( -type f -o -type l \) -print | sort >$DIR2_FILES
cd $CURDIR

#
# Build a list of all files.
#
cat $DIR1_FILES $DIR2_FILES | sort | uniq    >$ALL_FILES
cat $DIR1_FILES $DIR2_FILES | sort | uniq -d >$COMMON_FILES

#
# Print the files that are in dir2, but not in dir1.
#
cat $DIR1_FILES $ALL_FILES | sort | uniq -u >$TMP
if [ -s $TMP ]; then
     FOUND=TRUE
     echo ""
     echo "Files missing from $DIR1:"
     for f in `cat $TMP`
     do
          f=`expr "//$f" : '..\(.*\)'`
          echo "    $f"
     done
fi

#
# Print the files that are in dir1, but not in dir2.
#
cat $DIR2_FILES $ALL_FILES | sort | uniq -u >$TMP
if [ -s $TMP ]; then
     FOUND=TRUE
     echo ""
     echo "Files missing from $DIR2:"
     for f in `cat $TMP`
     do
          f=`expr "//$f" : '..\(.*\)'`
          echo "    $f"
     done
fi

#
# Print the files that are in dir1 and dir2, but are not
# the same.
#
FIRST=TRUE
for f in `cat $COMMON_FILES`
do
     cmp -s $DIR1/$f $DIR2/$f
     if [ $? -ne 0 ]; then
          FOUND=TRUE
          f=`expr "//$f" : '..\(.*\)'`
          if [ "$FIRST" = "TRUE" ]; then
               FIRST=FALSE
               echo ""
               echo "Files that are not the same:"
          fi

          if [ "$VERBOSE" = "TRUE" ]; then
               echo ""
               echo "File: $f"
               diff $DIR1/$f $DIR2/$f
          else
               echo "    $f"
          fi
     fi
done

rm -f /tmp/*.$$
if [ $FOUND = TRUE ]; then
     return 2
else
     echo "The directories are the same."
     return 0
fi

### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:
### }}}





