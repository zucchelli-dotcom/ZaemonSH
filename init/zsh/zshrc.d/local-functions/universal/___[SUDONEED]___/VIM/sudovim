#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# sudovim :
# Function to invoke sudo vim with a .vimrc file if it is needed to edit a protected file

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 13/0/2018 :
#  • Modify function presentation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME LIMIT

VERSION="2.0.1"
FCT_NAME="sudovim"

LIMIT=$# 

#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
    usage:  [  ]

    Examples:
                                                 # .

  ${NC}
__EOF__
}

resetter() {

	# re-initialize everything:
		unset i
		binplistfile=""
		otherfile=""
		myfile=""
		myplistfilearray=()
		otherplistfilearray=()
		myfilearray=()
		otherfilearray=()
		optionarray=()
		LOCALVIMRC=()
}

sudowarn() {
	if [[ ! -f ~/.zsh/vimhushsudo ]]; then	
		print "\e[1m "
		print "        Using \e[0m sudo vim \e[1m to edit file(s). "
		print "\e[0m "
		sleep 1  # Pause 1 second  to give the user time to read this.
	fi
}

binconvertwarn() {
	if [[ ! -f ~/.zsh/vimhushplist ]]; then	
		print "\e[1m "
		print "        Editing a binary plist file by temporarily converting it to XML. "
		print "\e[0m "
		sleep 1  # Pause 1 second  to give the user time to read this.
	fi
}

###############################################################################
###############################################################################

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
banner
# set -x  # uncomment to debug
resetter
# See if there is a special vimrc file to use

if [[ -z $LOCALVIMRC ]];then
	if [[ -f ~/.vimrc_save ]]; then
    	LOCALVIMRC=( -u ~/.vimrc_save )
	elif [[ -f ~/.vimrc ]]; then
		LOCALVIMRC=( -u ~/.vimrc )
	else
		LOCALVIMRC=()
	fi
fi

###############################################################################
# If no arguments are given, just start vim. If your $PWD is not your own,
# this starts "sudo vim" and pauses for two seconds to permit the user to 
# ponder the significance and ramifications of this development.
if [[ $# == 0 ]];then
	if [[ -O $PWD ]];then
		command vim "$@"
	else 
		print "starting with \e[1m sudo vim \e[0m "
		sleep 2
		sudo vim "$@"
	fi
	return 0
fi

for ((i = 1; i <= $LIMIT; i++ )) do
	eval file="\$$i"
	      # Test existence, ownership and binary-plistness of each file:		
	if [[ -e $file && $file:e == plist ]];then
		file_type=$(command file -b $file | awk '{print $2}' )
		if [[ ($file_type == data || $file_type == binary) &&   ! -O $file ]];then
			# This is a binary plist file I don't own
			binplistfile="true"
			otherfile="true"
			otherplistfilearray+=( $file )
		elif [[ ($file_type == data || $file_type == binary) && -O $file ]];then
			# This is a binary plist file I do own
			binplistfile="true"
		 	myfile="true"
			myplistfilearray+=( $file )				
		elif [[ $file_type != data &&   ! -O $file ]];then
			# This is an xml plist file I don't own
			# binplistfile="false"
			otherfile="true"
			otherfilearray+=( $file )
		elif [[ $file_type != data &&  -O $file ]];then
			 # This is an xml plist file I do own
			# binplistfile="false"
			myfile="true"
			 myfilearray+=( $file )
		else
			: # I think there are no other possibilities
		fi		
	elif [[ -e $file && ! -O $file ]]; then
		# The file exists and someone else owns this file
		# binplistfile="false"
		otherfile="true"
		otherfilearray+=( $file )
	elif [[ -e $file &&   -O $file ]]; then
		# The file exists and I own this file
		# binplistfile="false"
		myfile="true"
		myfilearray+=( $file )
	else 
		# File does not exist, or an option is given
		myfile="true"
		optionarray+=( $file )
	fi
done

# Use sudo vim to edit files that I do not own
if [[ $otherfile == "true" ]]; then
	sudowarn
	if [[ $binplistfile == "true" ]]; then
		binconvertwarn
		sudo plutil -convert xml1 		$otherplistfilearray
		sudo vim 	$LOCALVIMRC 			$optionarray		$otherplistfilearray
		sudo plutil -convert binary1 	$otherplistfilearray
	else
		sudo vim 	$LOCALVIMRC 			$optionarray  		$otherfilearray	
	fi
fi

# Use command vim to edit files that I do own
if [[ $myfile == "true" ]]; then
	if [[ $binplistfile == "true" ]]; then
		binconvertwarn
		plutil -convert xml1 	$myplistfilearray
		command vim		$LOCALVIMRC 		$optionarray		$myplistfilearray
		plutil -convert binary1 $myplistfilearray
	else
		command vim		$LOCALVIMRC 		$optionarray  		$myfilearray	
	fi
fi

resetter    
    
    
    
    
