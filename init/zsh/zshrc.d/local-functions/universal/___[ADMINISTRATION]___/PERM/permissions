#!/usr/bin/env zsh

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# permissions :
# octal to symbolic permissions

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 30/07/2019 :
#  • Create this one .

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME

VERSION="0.0.1"
FCT_NAME="$(echo $0)"


#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}
help(){
  echo "${RED}"
  cat<<__EOF__
    usage: $0 [  ]

    Examples:
                                                 # .


__EOF__
echo ${NC}
}

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
banner
declare -A symbolic_permissions
# typeset -A symbolic_permissions
symbolic_permissions=( 0 '---' 1 '--x' 2 '-w-' 3 '-wx' 4 'r--' 5 'r-x' 6 'rw-' 7 'rwx' )

local number=$@
local countn=$(echo $number | wc -m)
let countnb="$countn-1"
function usage() {
    echo "USAGE : $0 [0..7][0..7][0..7]"
}
if (( $countnb != 3 )); then
    echo "${RED}Give a number with 3 digits between 0 and 7${NC}"
    return 0
fi
# test if a parameter is numeric
# if [[ #? != 1 ]] && [[ $1 != <-> ]] && [[ $countnb == 3 ]]; then
if [[ $1 != <-> ]]; then
    echo "non-numeric !!"
    usage
    return 0
 fi

function symbolic_to_octal_permissions () {
    for ((digit=1; $digit<4; digit++)); do
        if [[ $number[$digit,$digit] < 8 ]]; then 
            for ((i=0; $i < 8; ++i)); do
                echo "$number[$digit,$digit] --  ${symbolic_permissions[$number[$digit,$digit]]}"
            break 
            done
        else 
            echo "Usage :  symbolic_to_octal_permissions [1 to 7]" 
            return 1
        fi
    done

}

function octal_to_symbolic_permissions () {
    mandatory_parameter(MODE, 1, symbolic permissions)
    printf "${symbolic_permissions[${MODE}]}\n"
}
echo "$GREEN"
symbolic_to_octal_permissions
# octal_to_symbolic_permissions
echo "$NC"
