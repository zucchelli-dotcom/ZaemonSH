#! /usr/bin/env zsh -f

######################################################################################################
#                                                                                                    #
#    ZAEMONSH Created by Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2017.         #
#    Copyright (c) 2019. All rights reserved.                                                        #
#    Hardly inspired by zsh-templates created by William Scott on May 11, 2007.                      #
#    Copyright (c) 2007. All rights reserved.                                                        #
#                                                                                                    #
#    This program is free software; you can redistribute it and/or modify it under the terms of      #
#    the GNU General Public License as published by the Free Software Foundation; either             #
#    version 2 of the License, or (at your option) any later version.                                #
#                                                                 									 # 
#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY ;      #
#    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.       #
#    See the GNU General Public License for more details.                                  			 #
#                                                        											 #
#    You should have received a copy of the GNU General Public License along with this program ;     #
#    if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,           #
#    Boston,  MA 02110-1301 USA                    													 #
#                                                                                                    #
#    cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                                       #
#                                                                                                    #
######################################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# remotebackup :
#    This script takes a list of files and directories,
#    builds a single archive, compressed, then emails it off to a 
#    remote archive site for safekeeping. It's intended to be run
#    every night for critical user files, but not intended to 
#    replace a more rigorous backup scheme. You should strongly 
#    consider using 'unpacker' on the remote end too.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 13/0/2018 :
#  • Modify function presentation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME

VERSION="0.0.1"
FCT_NAME="remotebackup"

#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
    usage:  [  ]

    Examples:
                                                 # .

  ${NC}
__EOF__
}



#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
banner
if [ $# -ne 2 -a $# -ne 3 ] ; then
  echo "Usage: $(basename $0) backup-file-list remoteaddr {targetdir}" >&2
  exit 1
fi

if [ ! -s "$1" ] ; then
  echo "Error: backup list $1 is empty or missing" >&2
  exit 1
fi

# Scan entries and build fixed infile list. This expands wildcards
# and escapes spaces in filenames with a backslash, producing a 
# change: "this file" becomes this\ file so quotes are not needed.
while read entry; do
  echo "$entry" | sed -e 's/ /\\ /g' >> $infile
done < "$1"

# The actual work of building the archive, encoding it, and sending it
tar czf - $(cat $infile) | \
  $uuencode $outfname | \
  mail -s "${3:-Backup archive for $(date)}" "$2" 

echo "Done. $(basename $0) backed up the following files:"
sed 's/^/   /' $infile
echo -n "and mailed them to $2 "
if [ ! -z "$3" ] ; then
  echo "with requested target directory $3"
else
  echo ""
fi

exit 0
