#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# goomp :
# Scraping pictures from google

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 13/0/2018 :
#  • Modify function presentation.
# 2020-08-06 :
#  • Debug script 
#  • To finish

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#######################
## COMMAND VARIABLES ##
#######################
local VERSION FCT_NAME

VERSION="0.0.1"
FCT_NAME="$(echo $0)"


#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
  cat<<__EOF__
  ${RED}
    usage:  [  ]

    Examples:
                                                 # .

  ${NC}
__EOF__
}

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
banner

keywords=""
for var in "$@"
do
    keywords+="$var%20"
done
ARGV=$keywords
echo
echo Number of words to submitted: $#
if [ $# -eq 0 ]
    then
    echo
    echo " No Arguments were passed"
    echo " Pass search terms to script. -  ./goomp [search terms]"
    echo " Example:"
    echo " ./goomp hot chicks drinking beer"
    echo
    exit 1
fi
clear
toilet -f smmono9 -F metal " Give.Me.Pics" | pv -qL 1900
echo -e '    \E[37;44m'"\033[1m A simple script that downloads Google Images.. \033[0m " | pv -qL 60
#echo "    A simple script that downloads Google Images.. " | pv -qL 50
echo
PS3='Please enter your choice:  '
options=("Simple Search" "Advanced Search" "Install Requirements" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Simple Search")
            echo
            clear
            toilet -f smmono9 -F metal " Simple.Options"
            echo " Creating tmp directory for images."
            echo
            printf " ${PWD}/tmp \n"
            echo
            if ! mkdir tmp; then echo " Directory already exists, okay will use ${PWD}/tmp " | pv -qL 55; fi           
            cd tmp
            echo
            echo -e " How many Pics you want? ( 1 - 99 ) \c"
            read piccount
            echo
            echo " Scraping "$piccount" images to ${PWD} "
            perl -Mojo -E'g("https://www.google.com/search?tbm=isch&q='$ARGV'", { "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 Chrome/24.0.1312.57" })->dom(".rg_l")->map(sub { m!href="http://www.google.com/imgres\?imgurl=(.*?)&amp;! and $1 } )->join("\n")->say' | head -"$piccount" | xargs -n 1 -P 8 wget -q
            echo 
            ;;
        "Advanced Search")
            echo
            clear
            toilet -f smmono9 -F metal " Advanced.Options"
            if ! mkdir tmp; then echo " Directory already exists, okay will use ${PWD}/tmp " | pv -qL 55; fi
            cd tmp
            echo
            echo -e ' File Type? ( JPG, PNG, GIF, BMP )  \E[37;44m'"\033[1m Enter \033[0m  for all. \c "
            read filetype
            echo
            echo " Available colortypes --"
            echo
            echo "    black blue brown gray green "
            echo "    orange pink purple red teal white yellow "
            echo 
            echo -e ' Choose a Color - \E[37;44m'"\033[1m Enter \033[0m  for all. \c"
            read colortype
            echo 
            echo -e ' Choose a Size - \E[37;44m'"\033[1m Enter \033[0m  for all. \c"
            echo '  Heigth: px = : '
            read size_h
            echo '  Width: px = : '
            read size_w
            echo
            echo -e " How many Pics you want? ( 1 - 99 ) \c"
            read piccount
            echo
            echo " Scraping "$piccount" images to ${PWD} " | pv -qL 15
            echo
            if [ ${#colortype} -eq 0 ]
                then
                colortype=""
            fi 
                   perl -Mojo -E'g("https://www.google.com/search?tbm=isch&q='$ARGV'filetype:'$filetype'&tbs=isz:ex,iszw:'$size_w',iszh:'$size_h',ic:specific,isc:'$colortype'", { "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 Chrome/24.0.1312.57" })->dom(".rg_l")->map(sub { m!href="http://www.google.com/imgres\?imgurl=(.*?)&amp;! and $1 } )->join("\n")->say' | head -"$piccount" | xargs -n 1 -P 8 wget -q    
                 # perl -Mojo -E'g("https://www.google.com/search?tbm=isch&q='$ARGV'filetype:'$filetype'&tbs=isz:ex,iszw:1920,iszh:1080,ic:specific,isc:'$colortype'", { "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 Chrome/24.0.1312.57" })->dom(".rg_l")->map(sub { m!href="http://www.google.com/imgres\?imgurl=(.*?)&amp;! and $1 } )->join("\n")->say' | head -"$piccount" | xargs -n 1 -P 8 wget -q
            ;;
        "Install Requirements")
            echo ""
            sudo apt-get update
            sudo apt-get install toilet pv curl wget perl make git -y
            sudo apt-get install libio-socket-ssl-perl -y
            sudo cpan install Mojolicious
            sudo curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n Mojolicious
            echo ""
            echo " Requirements Installed. "
            ;;
        "Quit")
            echo
            echo "Github Repo found at https://github.com/tytek2012/givemepics"
            break
            ;;
        *) echo invalid option
            clear
            toilet -f smmono9 -F metal " Give.Me.Pics" | pv -qL 1600
            echo "Options are" 
            echo "1) Simple Search"
            echo "2) Advanced Search" 
            echo "3) Install Requirements"      
            echo "4) Quit"
            ;;
    esac
done
