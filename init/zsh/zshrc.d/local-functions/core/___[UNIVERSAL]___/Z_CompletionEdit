#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# Z_ComlpetionEdit : 
# Edit actives ZaemonSH completions one by one.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#
# 30/07/2019
# • some results have multiple entry 
# • Add Test by active system completion
# 27/01/2019 :
# • Replace P_PLUGFCTDIR by P_ZDOTPLUGINSDIR.

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 30/07/2019
# • Create this one.
#  2020-07-23 :
# • Add testman function 

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
local COMTOSEARCH ZSHNATIVEOSXFUNCTIO ISIN_ZSHNATIVEOSXFUNCTIONFILE TGRMLFUNCTIONFILE ISIN_GRMLFUNCTIONFILE SYSFUNCTIONNORMO SYSFUNCTIONNORM SYSFUNCTIONTEST SYSFUNCTIONNB ISIN_SYSFUNCTIONNORM PLUGINSFUNCTION PLUGINSFUNCTIONPATH ISIN_PLUGINSFUNCTION MYFUNCTION ISIN_MYFUNCTION FUNCNAME FUNCNAMECORRECT FUNCPATH FUNCPATHAPROANDNAME TESTNAMECORRECT MYFUNCPATHAPROANDNAME bjracpath bjrac bjracorrec ZSHNATIVEOSXFUNCTIONNAME ZSHNATIVEOSXFUNCTIONINSIDETEST FCT_NAME VERSION


FCT_NAME=$(echo $0)
VERSION="0.0.1"

#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
banner () {
     clear
     echo " ##############################################################################"
     echo " #                                                                            #"
     echo " #  ${GREEN}This is ${RED}$FCT_NAME: ${YEL}$VERSION on ${GREEN}$OSTYPE${NC}${YEL} system.${NC}"
     echo " #  CopyL®®v 2020, Zucchelli Bryan                                            #"
     echo " #                                                                            #"
     echo " #  Unless required by applicable law or agreed to in writing, software       #"
     echo " #  distributed under the License is distributed on an AS IS BASIS,           #"
     echo " #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #"
     echo " #  See the License for the specific language governing permissions and       #"
     echo " #  limitations under the License.                                            #"
     echo " #                                                                            #"
     echo " ##############################################################################"
     echo ""
}

help(){
     clear
     banner
     echo ""
     echo ""
     echo "   ${RED}USAGE : Z_CompletionEdit <FUNCTIONNAME>${NC}"
     echo ""
}


testman(){
     ##/!\##
          #local TESTMAN=$(Z_Help_template_functions $COMTOSEARCH | awk '{ print $1}' | sed 's/(.*//')
          local TESTMAN="$(echo $(Z_Help_template_functions $COMTOSEARCH NE >/dev/null| awk '{ print $1}' |    sed 's/(.*//') |  sed 's/ //g')"
          local TESTMAN="$(Z_Help_template_functions "^$COMTOSEARCH" NE | grep "$COMTOSEARCH(7)")"
          # echo "--------"
          # echo "$COMTOSEARCH|"
          # echo "--------"
          # echo "$TESTMAN|"
          # echo "--------"

          if [[ "$TESTMAN" ]]; then
              echo " ${WG} Man page exist for $COMTOSEARCH${NC}"
              sleep 2
              #Z_Help_template_functions $COMTOSEARCH
              man $COMTOSEARCH
              TESTMAN=''
          else
              echo " ${WB} Man page inexistent for $COMTOSEARCH."
              echo "              We create one from man page skeleton."
              echo "              Remember to run sudo makewhatis to update your whatis database.${NC}"
              sleep 2
              TESTMAN=''
              cd $P_ZDOTMANDIR/man7
              cp $P_SYSETCDIR/skel/manTemplatesSkel "$COMTOSEARCH.7"
              $EDITOR "$COMTOSEARCH.7"
              makewhatis 2>/dev/null
              cd $OLDPWD
          fi
     ##/!\##
}

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
 if [[ $# == 1 ]]; then
	COMTOSEARCH="${@}"
    #######################
	## NATIVE ZSH COMPLETIONS
	echo $P_NATFCTDIR
    #ZSHNATIVEOSXFUNCTION=$(find "${P_NATFCTDIR}" -type f -name "${@}")
    ZSHNATIVEOSXFUNCTION=$(find "${P_NATFCTDIR}" -name "${@}")
    #####
    #/!\#
    #####   
        #######################
        ## IN NATIVE ZSH COMPLETIONS
        ZSHNATIVEOSXFUNCTIONNAME=$(basename $ZSHNATIVEOSXFUNCTION 2>/dev/null)
        ZSHNATIVEOSXFUNCTIONINSIDETEST=$(which $COMTOSEARCH | awk '{ print $7 }')
    #####
    #/!\#
    #####

    
    ISIN_ZSHNATIVEOSXFUNCTIONFILE=''
	#########################
	## GRML COMPLETIONS
	if [[ -f $P_GRMLRCFIL ]]; then
		TGRMLFUNCTIONFILE=$(grep '()' $P_GRMLRCFIL 2>/dev/null | grep -v "[#;';=]" | sed 's/() //g' | sed 's/{//g' | sed 's/()//g' | grep -v '}' | sed 's/function//g' | grep $COMTOSEARCH | sed 's/^[ \t]*//' | grep "^${COMTOSEARCH}$")
   	#grep "()" .zshrc | grep -v "[#;';=]" | sed 's/() //g' | sed 's/{//g' | sed 's/()//g' | grep -v "}" | sed 's/function//g'
	ISIN_GRMLFUNCTIONFILE=''
	fi
	##########################
	## ZEAMONSH  COMPLETIONS
	SYSFUNCTIONNORMO=$(ls -A $ZDOT/zshrc.d/local-functions/* | grep -v "audio" | grep -v "xtal" | grep -v README | grep -v "pashua.app" | grep "${@}")
	#SYSFUNCTIONNORM=$(find $P_SYSFCTDIR/* -type l -name "${@}")
	SYSFUNCTIONNORM=$(find $P_SYSFCTDIR/* -type l | grep "/$COMTOSEARCH\b")
	#SYSFUNCTIONTESTO=($(find $P_SYSFCTDIR/* -type l | grep -F "/$COMTOSEARCH" | sed 's/.*\///'))
	SYSFUNCTIONTESTO=($(find $P_SYSFCTDIR/* -type l | grep -Fw "/$COMTOSEARCH" | sed 's/.*\///'))
	SYSFUNCTIONTEST=($(find $P_SYSFCTDIR/* -type l | grep -F "$COMTOSEARCH" | sed 's/.*\///' | tr '\n' ' '))

	##Print a count of multiple matches.
	SYSFUNCTIONNB=$(find $P_SYSFCTDIR/* -type l | grep -c "/${@}")

	ISIN_SYSFUNCTIONNORM=''

	###########################
	## EXTRAS-PLUGINS COMPLETIONS
    PLUGINSFUNCTION=$(grep  -R  -e '() {'  -e '(){'  $P_ZDOTPLUGINSDIR 2>|/dev/null | grep -v -e '.zsh.disabled:' -e '/_' | sed 's/function//'   | grep -v -e "eval " -e '^#' | sed 's/^[ \t]*//g'   | uniq | sed 's/.*://' | sed 's/^[ \t]*//' | sed 's/() {.*//' | sed 's/(){.*//'  | sort -u | sed 's/ //' | grep -v '^__' | grep  '^_' | grep "$COMTOSEARCH")
    # PLUGINSFUNCTION=$(grep -rn '()' $P_ZDOTPLUGINSDIR 2>/dev/null | sed 's/.*://' | grep '^[a-z__]' | grep -v "=()" | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep "^${COMTOSEARCH}" | grep "${COMTOSEARCH}$" | grep "$COMTOSEARCH")
	#PLUGINSFUNCTION=$(grep -r '()' $P_PERSFCTDIR | sed 's/.*://' | sed 's/^[ \t]*//' | grep -v '=()' | grep '^[a-z__]' | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep $COMTOSEARCH )
	PLUGINSFUNCTIONPATH=$(grep -r -e "$COMTOSEARCH(" -e "$COMTOSEARCH ("  $P_ZDOTPLUGINSDIR | sed 's/:.*//')
	# PLUGINSFUNCTIONPATH=$(grep -r $COMTOSEARCH $P_ZDOTPLUGINSDIR 2>/dev/null |  sed 's/:.*//' | sort -u)
	ISIN_PLUGINSFUNCTION=''

	########################################
	## PERSONNAL COMPLETIONS
	##
	MYFUNCTION=$(find $P_PERSFCTDIR -type f -name "${@}")
	ISIN_MYFUNCTION=''

	#-------------------------------------------------------------------------------------------#
 	#                                               SCRIPT
	#-------------------------------------------------------------------------------------------#
	banner
	echo ""
	echo "$LINEE"
    echo ""
	#######################################
    echo "===  Completion ${GREEN} $COMTOSEARCH ${NC} ==="
	#######################################
	echo ""
	echo "$LINEE"
	echo ""
    ########################################
	## NATIVE ZSH COMPLETIONS
    	if [[ $ZSHNATIVEOSXFUNCTIONNAME != $COMTOSEARCH ]] && [[ ! -f $ZSHNATIVEOSXFUNCTIONINSIDETEST ]] && [[ "$(dirname $ZSHNATIVEOSXFUNCTIONINSIDETEST 2>/dev/null)" != "$P_NATFCTDIR"  ]]; then
		echo "${RED}•${NC} it isn't in  : ${RED}$P_NATFCTDIR${NC}"
    	elif  [[ $ZSHNATIVEOSXFUNCTIONNAME != $COMTOSEARCH ]] && [[ -f $ZSHNATIVEOSXFUNCTIONINSIDETEST ]] && [[ "$(dirname $ZSHNATIVEOSXFUNCTIONINSIDETEST 2>/dev/null)" == "$P_NATFCTDIR"  ]]; then
		echo "${GREEN}•${NC} Is inside a native function : ${GREEN}$ZSHNATIVEOSXFUNCTIONINSIDETEST${NC}"
        	if [[ "$EDITOR" == "vim" ]]; then
        		$EDITOR "+/{$COMTOSEARCH}" $ZSHNATIVEOSXFUNCTIONINSIDETEST
        	else
        		$EDITOR $ZSHNATIVEOSXFUNCTIONINSIDETEST
        	fi
        #####
        #/!\#
        #####
    	elif [  $ZSHNATIVEOSXFUNCTION ]; then
		echo "${GREEN}•${NC} Is in folder : ${GREEN}$P_NATFCTDIR${NC}"
		echo "${CYAN}  $ZSHNATIVEOSXFUNCTION ${MAGENTA}"
		$EDITOR  $ZSHNATIVEOSXFUNCTION
		echo "${NC}"	
		# echo "${GREEN}•${NC} Contient : ${GREEN}"
		ISIN_ZSHNATIVEOSXFUNCTIONFILE='YES'
    	else 
		echo "${RED}•${NC} it isn't in  : ${RED}$P_NATFCTDIR${NC}"

	fi
    
        ########################################
	## GRMLRC COMPLETIONS
	if [[ -f "${HOME}/.zsh/grmladdi" ]] && [[ $LOAD_GRML_ADDITION_COMPLETIONS == "YES" ]];then
		if [[ "${TGRMLFUNCTIONFILE}" == "${COMTOSEARCH}" ]]; then
			echo "${GREEN}•${NC} Is in : ${GREEN}$P_GRMLRCFIL${MAGENTA}"
			# echo "${GREEN}•${NC} Contient : ${GREEN}"
			sleep 2
           		 vim $P_GRMLRCFIL
			echo "${NC}"
			ISIN_GRMLFUNCTIONFILE='YES'
		fi
	else
		echo "${RED}••${NC} GRML not currently actived.${NC}"
	fi

        ########################################
        ## ZAEMONSH COMPLETIONS 	
        if [[ $(basename -a $(find $P_SYSFCTDIR -maxdepth 5 -type f)  | grep -v ".zip" | sort -fi | grep -wc $COMTOSEARCH) = 1 ]]; then
        echo "${GREEN}•${NC} Is in folder : ${GREEN}$P_SYSFCTDIR${NC}"
		echo "${GREEN} ${NC} With this PATH : ${CYAN}$SYSFUNCTIONNORM${MAGENTA}"
		$EDITOR $SYSFUNCTIONNORM
        testman
		echo""
		ISIN_SYSFUNCTIONNORM='YES'
         # In case of not just one function with same name in same  categories (eg. 2 trash functions in darwin category )
         elif [[ $(basename -a $(find $P_ZDOTCONFDIR -maxdepth 5 -type f ) | grep -v ".zip" | sort -fi | grep -wc $COMTOSEARCH) > 1 ]] && [[ $(echo -e $(find $P_ZDOTCONFDIR -maxdepth 5 -type f -name "$COMTOSEARCH" | awk -F'/' '{ print $9 }' | sort -uf | wc -l)) = 1 ]]; then 
               echo "${RED}• ${NC}There is more than one ${RED}$COMTOSEARCH${NC} functions on same category :"
               for samesystst in $(find $P_SYSFCTDIR -maxdepth 4 -type f -name $COMTOSEARCH); do
                   if [[ $(basename -a $samesystst) == $COMTOSEARCH ]]; then
                  	# echo "${RED}• Warning There is more than one $COMTOSEARCH functions."
                  	echo "${GREEN} ${NC} With that PATH : ${CYAN}$samesystst${MAGENTA}"
                  	sleep 3
                  	$EDITOR $samesystst
                  	wait
                  	sleep 1
                    testman
                   fi
               done
   	# In case of not just one function with same name in diferents  categories (eg. 2 cdd functions in linux and darwin categories )
   	elif [ $SYSFUNCTIONNORM ] && [[ "$SYSFUNCTIONNB" > 1 ]]; then
     		echo "${GREEN}•${NC} There are ${GREEN}$SYSFUNCTIONNB $COMTOSEARCH functions${NC} in '$P_SYSFCTDIR' on ${GREEN}differents categories.${NC}"
        	#echo $SYSFUNCTIONTEST
        	#echo $SYSFUNCTIONNB
        	for systest in $SYSFUNCTIONTEST; do
             		if [[ $(basename -a $systest) == $COMTOSEARCH ]]; then
                 		echo "${NC} With that PATH : ${CYAN}$systest${MAGENTA}"
                 		sleep 3
                 		$EDITOR $systest
                 		wait
                 		sleep 1
                        testman
              		fi
        	done
   	elif [ $SYSFUNCTIONNORM  ] && [[ "$SYSFUNCTIONNB" < 1 ]]; then
        	echo "${NC} With this PATH : ${CYAN}$SYSFUNCTIONNORM${MAGENTA}"
        	$EDITOR  $SYSFUNCTIONNORM
            testman
    	else
        	echo "${RED}•${NC} It isn't in folder : ${RED}$P_SYSFCTDIR${NC}"
    	fi
	
        ########################################
	## $ZDOT/plugins
	if [[ $LOAD_PLUGINSEXTRA_FUNCTIONS == 'YES' && -f ${HOME}/.zsh/plugextraaddi ]]; then
            if [[ $PLUGINSFUNCTION == $COMTOSEARCH ]] ; then
	    		echo "${GREEN}•${NC} Is in folder : ${GREEN}$P_PERSFCTDIR${NC}"
			echo "${GREEN} ${NC} with this PATH :${CYAN}$PLUGINSFUNCTIONPATH "
			       #FUNCNAME=$(grep -r '()' $P_ZDOTPLUGINSDIR 2>/dev/null | grep -v '=()' | sed 's/.*://' | sed 's/^[ \t]*//' | grep '^[a-z__]' | sed 's/(.*//' | sed 's/function//' | grep "$COMTOSEARCH" ) ## Pas complet
		    	#FUNCNAMECORRECT=$(grep -r '()' $P_ZDOTPLUGINSDIR 2>/dev/null | grep -v '=()' | grep -v "README" | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep "$COMTOSEARCH" | grep "$COMTOSEARCH$" | sed 's/.*://' | sed 's/^[ \t]*//' | grep "^$COMTOSEARCH" )
				   #FUNCPATH=$(grep -r '()' $P_ZDOTPLUGINSDIR 2>/dev/null | grep -v '=()' | grep -v 'README' | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep "$COMTOSEARCH" | grep "$COMTOSEARCH$" | sed 's/:.*//' 2>/dev/null)
			#FUNCPATHAPROANDNAME=$(grep -r '()' $P_ZDOTPLUGINSDIR 2>/dev/null | grep -v '=()' | grep -v "README" | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep "$COMTOSEARCH" | grep "$COMTOSEARCH$" )
			##TESTPATH=$(grep -r '()' $P_PERSFCTDIR |  grep -v '=()' | sed 's/.*://' | sed 's/^[ \t]*//'  | grep '^[a-z__]' | sed 's/(.*//' | sed 's/function//' | sed 's/=//'  | grep $COMTOSEARCH)	
			#TESTNAMECORRECT=$(grep -rn '()' $P_ZDOTPLUGINSDIR 2>/dev/null | sed 's/.*://' | grep '^[a-z__]' | grep -v "=()" | sed 's/(.*//' | sed 's/function//' | sed 's/=//' | sed 's/^[ \t]*//' | grep "^${COMTOSEARCH}" | grep "${COMTOSEARCH}$" | grep "$COMTOSEARCH" )
			#MYFUNCPATHAPROANDNAME=$FUNCPATH:$FUNCNAME
			#foreach bj in $FUNCPATHAPROANDNAME; do
				#bjracpath=$(echo "${bj}" | sed 's/:.*//')
				#bjrac=$(echo "${bj}" | sed 's/.*://')
				#bjracpathcorrect=$(echo "${bjracpath}:${bjrac}" | grep "${COMTOSEARCH}$" | sed 's/:.*//' | grep "${ZDOT}")
				#bjracorrec=$(echo "${bjrac}" | sed 's/^[ \t]*//' | grep "^${COMTOSEARCH}")
				#foreach bz in ${bjrac}; do
			 		##if [[ "${bjracorrec}" != "${COMTOSEARCH}" ]]; then
			 		#echo "  ${bjracpathcorrect}${MAGENTA}"
				#done
			#done
			#functions $COMTOSEARCH
			sleep 2
            vim +/$COMTOSEARCH $PLUGINSFUNCTIONPATH
        		# vim "${bjracpathcorrect}" 
			echo "${NC}"		
			# echo "${GREEN}•${NC} Contient : ${GREEN}"
			# cat $SYSFUNCTIONNORM
			ISIN_MYFUNCTION='YES'
		else
    			echo "${RED}•${NC} It isn't in folder : ${RED}$P_ZDOTPLUGINSDIR${NC}"
		fi
	else
			echo "${RED}••${NC} Plug-ins extras not currently actived.${NC}"

	fi


	########################################
 	## /Users/$USER/.zshrc_local.d/site_functions
    	if [[ $MYFUNCTION == "${COMTOSEARCH}" ]]; then
		echo "${GREEN}•${NC} It isn't in folder : ${GREEN}$P_SYSFCTDIR${NC}"
        	echo "${GREEN} ${NC} With this PATH :" 
		echo "${CYAN}$MYFUNCTION${NC}"
		sleep 2
        	vim "$MYFUNCTION"
		# cat $SYSFUNCTIONNORM
		echo "${NC}"
		ISIN_MYFUNCTION='YES'
    	else
		echo "${RED}•${NC} It isn't in : ${RED}$P_SYSFCTDIR${NC}"
	fi
	echo ""
    	echo "$LINEE"
else
    help
fi

