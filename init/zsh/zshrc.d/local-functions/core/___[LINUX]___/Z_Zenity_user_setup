#! /usr/bin/env zsh -f

##########################################################################################
#                                                                                        #
#  ZaemonSH created by :                                                                 #
#  Zucchelli Bryan && @N@TOME && Admiral Gr@ss H0pper on Oct 13, 2016.                   #
#  Copyright (c) 2020. All rights reserved.                                              #
#  Inspired by zsh-templates-osx created by :                                            #
#  William Scott on May 11, 2007.                                                        #
#  Copyright (c) 2007. All rights reserved.                                              #
#                                                                                        #
#  This program is free software; you can redistribute it and/or modify it under         #
#  the terms of the GNU General Public License as published by the Free Software         #
#  Foundation; either version 2 of the License, or (at your option) any later version.   #
#                                                                                        #
#  This program is distributed in the hope that it will be useful, but WITHOUT           #
#  ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or                #
#  FITNESS FOR A PARTICULAR PURPOSE.                                                     #
#  See the GNU General Public License for more details.                                  #
#                                                                                        #
#  You should have received a copy of the GNU General Public License                     #
#  along with this program ; if not, write to the Free Software Foundation,              #
#  Inc., 51 Franklin Street, Fifth Floor, Boston,  MA 02110-1301 USA                     #
#                                                                                        #
#  cf. URL:   http://www.fsf.org/licensing/licenses/gpl.html                             #
#                                                                                        #
##########################################################################################

#----------------------------------------------------------------------------------------#
#                                     DESCRIPTION
#----------------------------------------------------------------------------------------#
# zenity_user_setup :
# By Zucchelli Bryan, 0ct 19, 2016
#  Sets up hosts and its completion using Zenity gui on linux.

#----------------------------------------------------------------------------------------#
#                                        TODO
#----------------------------------------------------------------------------------------#
# 10/10/2017 :
#  • Test if no bug exist.

#----------------------------------------------------------------------------------------#
#                                       CHANGES
#----------------------------------------------------------------------------------------#
# 10/10/2017 :
#  • Modifying Script presentation, add description.
#  • put script on function.

# 18/08/2019 :
# • Unifying script presendtation.

#----------------------------------------------------------------------------------------#
#                                       CONFIG
#----------------------------------------------------------------------------------------#
#=======================
# Define local variables
#=======================
local version use_etc_users use_custom_users usernames custom_list
version="0.0.1"
#----------------------------------------------------------------------------------------#
#                                      FUNCTIONS
#----------------------------------------------------------------------------------------#
#==================================
# Check current completion settings
#==================================
# Choose user name completion options:
compSetCheck () {
if [[ $USE_ETC_USERS == 'yes' ]]; then
    use_etc_users='1'
    condietc=TRUE
else
    use_etc_users='0'
    condietc=FALSE
fi

if [[ $USE_CUSTOM_USERS == 'yes' ]]; then
    use_custom_users='1'
    condicustom=TRUE
else
    use_custom_users='0'
    condicustom=FALSE
fi  
}

# #=============
# # Starting gui
# #=============
guiStarting () {
    usernames=$(cat "/home/$USER/.zsh/cache/custom_users")
    if [[ -z $usernames ]]; then
        usernames=${$( command ls /home/ ):#lost+found}
    fi
    #echo $usernames

    rep1="Use user names generated by zsh _user function."
    rep2="Use custom-defined list of users."
    rep3="revert to default settings"
    ##  emacs or vi keybindings?
    function user_setup {
            #answer1=$(zenity --list --title="user completion setup" --width=400 --radiolist --text="Choose user name completion options:" --column "" --column "Item" TRUE "$rep1" FALSE "$rep2" --hide-header --cancel-label="revert to default settings" --ok-label="Cancel"  --extra-button="Save"   2>/dev/null)
            answer1=$(zenity --list --title="user completion setup" --width=400 --radiolist --text="Choose user name completion options:" --column "" --column "Item" "$condietc" "$rep1" "$condicustom" "$rep2" --hide-header  --extra-button="revert to default settings"   2>/dev/null)
            if [[ "$?" == "1"  ]] && [[ "$answer1" != "$rep3"  ]]; then
                 print "You chse to cancel the task."
                return 0
            fi

            if [[ "$answer1" == "$rep3"  ]] && [[ "$?" == "1" ]]; then
                print "You chse to revert to default settings."
                command perl -pi -e "s|USE_ETC_USERS.+|USE_ETC_USERS=\'yes\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                command perl -pi -e "s|USE_CUSTOM_USERS.+|USE_CUSTOM_USERS=\'no\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                print ${usernames} | sed 's/ /\n/g' >| ~/.zsh/cache/custom_users
                source ~/.zsh/cache/Z_Host_user_completion_settings
            fi
            #####
            #####

                ###
            if [[ "$answer1" == "$rep1"  ]] && [[ "$?" == "0" ]]; then
                print "You chse use user names list generated by zsh _user function."
                command perl -pi -e "s|USE_ETC_USERS.+|USE_ETC_USERS=\'yes\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                source ~/.zsh/cache/Z_Host_user_completion_settings

            else
                command perl -pi -e "s|USE_ETC_USERS.+|USE_ETC_USERS=\'no\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                source ~/.zsh/cache/Z_Host_user_completion_settings

            fi
                ###
            if [[ "$answer1" == "$rep2"  ]] && [[ "$?" == "0" ]]; then
                 print "You chse use custom list of user."
                /bin/rm -f ~/.zsh/zshvi
                custom_list=$(zenity --entry --text="Custom-defined list of users separate by space" --entry-text=$usernames 2>/dev/null)
                print ${custom_list} | sed 's/ /\n/g' >| ~/.zsh/cache/custom_users
                command perl -pi -e "s|USE_CUSTOM_USERS.+|USE_CUSTOM_USERS=\'yes\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                source ~/.zsh/cache/Z_Host_user_completion_settings
            else
                command perl -pi -e "s|USE_CUSTOM_USERS.+|USE_CUSTOM_USERS=\'no\'|g" ~/.zsh/cache/Z_Host_user_completion_settings
                source ~/.zsh/cache/Z_Host_user_completion_settings
            fi   

            # #========================================================
            # # Issue a warning message if custom_users is empty and if
            # # USE_CUSTOM_USERS variable is set to 'yes'.
            # #========================================================

            if [[ -z $( < ~/.zsh/cache/custom_users ) && $USE_CUSTOM_USERS == 'yes' ]]; then

                if [[ $ENCODING == '1:14' ]]; then
                    print ""
                    print "\e[1m  custom_users. Z_user_setup.\e[0m"
                    print ""
                else
                    print ""
                    print "\e[1m  custom_users file is empty.  Please execute Z_User_setup.\e[0m"
                    print ""
                fi

            fi
            # #=======================
            # # Update $USERS variable
            # #=======================
            #   #~~~~~~~~~~~~~~~~~~~~~~~~~
            #   # Clear elements in $USERS
            #   #~~~~~~~~~~~~~~~~~~~~~~~~~
                USERS=()
            #   #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            #   # Define a list of users for user name completion
            #   #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            if [[ $USE_ETC_USERS == 'yes' ]]; then

                    zmodload -i zsh/parameter
                    etc_users=( $userdirs[(I)*] )

                    USERS+=( $etc_users )

            fi

            if [[ $USE_CUSTOM_USERS == 'yes' && -f ~/.zsh/cache/custom_users ]]; then

                    custom_users=(

                    $( < ~/.zsh/cache/custom_users )

                    )

                    USERS+=( $custom_users )
            fi
            #   #~~~~~~~~~~~~~~~~~~~~~~~
            #   # get rid of the repeats
            #   #~~~~~~~~~~~~~~~~~~~~~~~

            typeset -U USERS
    }
    user_setup
}

#----------------------------------------------------------------------------------------#
#                                       SCRIPT
#----------------------------------------------------------------------------------------#
[[ $IS_LINUX ]] && compSetCheck && guiStarting




 



  
