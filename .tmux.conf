# ----------------------
# Generals settings
# ----------------------
## Set the command for new windows to "zsh"
## set -g default-command zsh

# use UTF8
###set -g utf8
###set-window-option -g utf8 on

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 10000 (10k)
set -g history-limit 10000

## set Ctrl-a as the default prefix key combination
## and unbind C-b to free it up
## set -g prefix C-a
## unbind C-b

## use send-prefix to pass C-a through to application
## bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# Set aggressive-resize
set -g aggressive-resize on

## If enabled and the session is no longer attached to any clients, it is destroyed
## set destroyed-unattached on

# If enabled, the server will exit when there are no attached clients.
#set exit-unattached on

## 
## set clipboard on

# Enable native Mac OS X copy/paste
set-option -g default-command "command zsh -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

##
###set set-titles on

##
set-window-option -g display-panes-time 1500

# Set window notifications
set -g visual-activity on
set -g monitor-activity on

##
## set activity-action any

# set window and pane index to 1 (0 by default)
##set-option -g base-index 1
##setw -g pane-base-index 1

# no one needs a mouse
###set mouse on
set-window-option -g mouse on


## explicitly disable mouse control
## setw -g mode-mouse off
## set -g mouse-select-pane off
## set -g mouse-resize-pane off
## set -g mouse-select-window off

## OS X specific
## if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'


# sometimes needed.. maybe..
setw -g xterm-keys on

# -----------------------------
# Keyboard setting and bindkey
# -----------------------------

## VIM keys
set-window-option -g mode-keys vi
set-option -g status-keys vi

## BINDKEYS
# open new windows in previous working directory
bind c new-window -c "$PWD"

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# Make the current window the first window
bind T swap-window -t 1

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# and use C-h and C-l to cycle thru panes
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# uncomment below stanza to enable smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
###bind-key -t vi-copy v begin-selection
###bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
###unbind -t vi-copy Enter
###bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# colorize messages in the command line
set-option -g message-style bg=black #base020
set-option -g message-style fg=brightred#orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
###set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set-window-option -g window-style fg=black
set-window-option -g window-status-style bg=black

# visual notification of activity in other windows
set -g monitor-activity on
set -g visual-activity on

# set color for status bar
# set-option -g status-style bg=colour235 #base02
set-option -g status-style bg=black #base02
set-option -g status-style fg=red #yellow
###set-option -g status-style attr=dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=green#base0
set-window-option -g window-status-style bg=black
# set-window-option -g window-status-style attr=dim

set-window-option -g window-status-current-style fg=green #orange
set-window-option -g window-status-current-style bg=green
# set-window-option -g window-status-current-style attr=bright

#
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'

# Status Bar solarized-dark (default)
set-option -g pane-active-border-style fg=black
set-option -g pane-active-border-style bg=black

# Status Bar solarized-black
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg black"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg green"

# prevent window name from changing
set-option -g allow-rename off

# show host name and IP address on left side of status bar
set -g status-left-length 70
set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: #(date -u | awk '{print $5}')::"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# New session called ``Worksation''
# new -s Workstation
